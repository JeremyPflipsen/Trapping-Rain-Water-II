{"ast":null,"code":"function Node(row, col) {\n  return document.getElementById(`node-${row}-${col}`);\n} // Gets a node from the screen\n\n\nfunction NodeVal(row, col) {\n  return Number(document.getElementById(`node-${row}-${col}`).value);\n}\n\nfunction checkRow(row, value) {\n  for (let col = 0; col < 9; col++) {\n    if (NodeVal(row, col) === value) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction checkCol(col, value) {\n  for (let row = 0; row < 9; row++) {\n    if (NodeVal(row, col) === value) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction checkSquare(row, col, value) {\n  let squareRow = Math.floor(row / 3) * 3;\n  let squareCol = Math.floor(col / 3) * 3;\n\n  for (let i = 0; i < 3; i++) {\n    for (let j = 0; j < 3; j++) {\n      if (NodeVal(squareRow + i, squareCol + j) === value) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction checkValue(row, col, value) {\n  if (checkRow(row, value) && checkCol(col, value) && checkSquare(row, col, value)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction solve() {\n  for (let row = 0; row < 9; row++) {\n    for (let col = 0; col < 9; col++) {\n      if (NodeVal(row, col) === 0) {\n        for (let num = 1; num <= 9; num++) {\n          if (checkValue(row, col, num)) {\n            Node(row, col).value = num;\n\n            if (num === 10 && NodeVal(row, col) === 0) {\n              console.log(\"No solution found :(\");\n              return;\n            }\n\n            solve();\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default function backtracking(grid) {\n  solve();\n}","map":{"version":3,"sources":["C:/Users/hp/Desktop/Sudoku/my-app/src/algorithms/backtracking.js"],"names":["Node","row","col","document","getElementById","NodeVal","Number","value","checkRow","checkCol","checkSquare","squareRow","Math","floor","squareCol","i","j","checkValue","solve","num","console","log","backtracking","grid"],"mappings":"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","sourcesContent":["function Node(row, col) {\r\n    return document.getElementById(`node-${row}-${col}`)\r\n} // Gets a node from the screen\r\n\r\nfunction NodeVal(row, col){\r\n    return Number(document.getElementById(`node-${row}-${col}`).value)\r\n}\r\n\r\nfunction checkRow(row, value) {\r\n    for (let col = 0; col < 9; col++) {\r\n        if (NodeVal(row,col) === value) {\r\n            return false\r\n        }\r\n    }\r\n    return true\r\n}\r\n\r\nfunction checkCol(col, value) {\r\n    for (let row = 0; row < 9; row++) {\r\n        if (NodeVal(row,col) === value) {\r\n            return false\r\n        }\r\n    }\r\n    return true\r\n}\r\n\r\nfunction checkSquare(row, col,value) {\r\n    let squareRow = Math.floor(row/3)*3\r\n    let squareCol = Math.floor(col/3)*3\r\n\r\n    for (let i = 0; i<3; i++) {\r\n        for (let j = 0; j < 3; j++) {\r\n            if (NodeVal(squareRow + i, squareCol + j) === value)\r\n                return false\r\n        }\r\n    }\r\n    return true\r\n}\r\n\r\nfunction checkValue(row, col, value) {\r\n    if (checkRow(row, value) &&\r\n        checkCol(col,value) &&\r\n        checkSquare(row,col,value)) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\nfunction solve() {\r\n    for (let row =0; row < 9; row++) {\r\n        for (let col = 0; col < 9; col++) {\r\n            if (NodeVal(row,col) === 0) {\r\n                for (let num = 1; num <= 9; num++) {\r\n                    if (checkValue(row,col,num)){\r\n                        Node(row,col).value=num\r\n                        if (num === 10 && NodeVal(row,col) === 0){\r\n                            console.log(\"No solution found :(\")\r\n                            return\r\n                        }\r\n                        solve()\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default function backtracking(grid) {\r\n    solve()\r\n}"]},"metadata":{},"sourceType":"module"}