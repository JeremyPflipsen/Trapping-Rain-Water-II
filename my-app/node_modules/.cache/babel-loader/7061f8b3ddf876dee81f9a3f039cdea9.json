{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Sudoku\\\\my-app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport PathfindingVisualizer from \"./PathfindingVisualizer/PathfindingVisualizer\";\nimport Menu from './Menu';\nimport backtracking from './algorithms/backtracking';\nimport visualizeBacktracking from './algorithms/visualizeBacktracking.js';\nimport simulatedAnnealing from \"./algorithms/simulatedAnnealing\";\nimport visualizeSimulatedAnnealing from \"./algorithms/visualizeSimulatedAnnealing\";\nimport loadGrid from './loadGrid';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: [],\n      selectedAlg: 0\n    };\n    this.visualizeAlgorithm = this.visualizeAlgorithm.bind(this);\n    this.loadSGrid = this.loadSGrid.bind(this);\n    this.Node = this.Node.bind(this);\n  }\n\n  visualizeAlgorithm() {\n    let moves = [];\n\n    switch (this.state.selectedAlg) {\n      case 0:\n        console.log(\"No algorithm selected!\");\n        break;\n\n      case 1:\n        moves = backtracking(this.state.grid);\n        visualizeBacktracking(moves);\n        break;\n\n      case 2:\n        moves = simulatedAnnealing(this.state.grid);\n        setTimeout(visualizeSimulatedAnnealing(moves), 1000);\n        break;\n\n      default:\n        console.log(\"You selected an algorithm!\");\n        break;\n    }\n  }\n\n  Node(row, col) {\n    return document.getElementById(`node-${row}-${col}`);\n  } // Gets a node from the screen\n\n\n  loadSGrid() {\n    this.setState({\n      grid: loadGrid()\n    }, () => console.log(this.state.grid[0])); //   for (let row = 0; row < 9; row++){\n    //     for (let col = 0; col <9; col++){\n    //         Node(row,col).value = this.state.grid[row][col]\n    //     }\n    // }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"Algorithm Visualizer\"), /*#__PURE__*/React.createElement(Menu, {\n      props: this.state,\n      handleClick: this.visualizeAlgorithm,\n      loadSGrid: this.loadSGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(PathfindingVisualizer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \"p.s. I love you :heart:\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/hp/Desktop/Sudoku/my-app/src/App.js"],"names":["React","PathfindingVisualizer","Menu","backtracking","visualizeBacktracking","simulatedAnnealing","visualizeSimulatedAnnealing","loadGrid","App","Component","constructor","props","state","grid","selectedAlg","visualizeAlgorithm","bind","loadSGrid","Node","moves","console","log","setTimeout","row","col","document","getElementById","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,qBAAP,MAAkC,+CAAlC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,qBAAP,MAAkC,uCAAlC;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,OAAOC,2BAAP,MAAwC,0CAAxC;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAIA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKE,IAAL,GAAY,KAAKA,IAAL,CAAUF,IAAV,CAAe,IAAf,CAAZ;AACD;;AAEDD,EAAAA,kBAAkB,GAAG;AACnB,QAAII,KAAK,GAAG,EAAZ;;AACA,YAAO,KAAKP,KAAL,CAAWE,WAAlB;AACE,WAAK,CAAL;AACEM,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA;;AAEF,WAAK,CAAL;AACEF,QAAAA,KAAK,GAAGhB,YAAY,CAAC,KAAKS,KAAL,CAAWC,IAAZ,CAApB;AACAT,QAAAA,qBAAqB,CAACe,KAAD,CAArB;AACA;;AAEF,WAAK,CAAL;AACEA,QAAAA,KAAK,GAAGd,kBAAkB,CAAC,KAAKO,KAAL,CAAWC,IAAZ,CAA1B;AACAS,QAAAA,UAAU,CAAChB,2BAA2B,CAACa,KAAD,CAA5B,EAAoC,IAApC,CAAV;AACA;;AAEF;AACEC,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA;AAjBJ;AAmBD;;AAEDH,EAAAA,IAAI,CAACK,GAAD,EAAMC,GAAN,EAAW;AACb,WAAOC,QAAQ,CAACC,cAAT,CAAyB,QAAOH,GAAI,IAAGC,GAAI,EAA3C,CAAP;AACD,GArC+B,CAqC9B;;;AAEFP,EAAAA,SAAS,GAAG;AACV,SAAKU,QAAL,CAAc;AAACd,MAAAA,IAAI,EAAEN,QAAQ;AAAf,KAAd,EAAkC,MAAMa,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWC,IAAX,CAAiB,CAAjB,CAAZ,CAAxC,EADU,CAEZ;AACA;AACA;AACA;AACA;AACC;;AAEDe,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE,KAAKhB,KADd;AAEE,MAAA,WAAW,EAAE,KAAKG,kBAFpB;AAGE,MAAA,SAAS,EAAE,KAAKE,SAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAOE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCARF,CADF;AAYD;;AA7D+B;;AAgElC,eAAeT,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport PathfindingVisualizer from \"./PathfindingVisualizer/PathfindingVisualizer\";\nimport Menu from './Menu'\nimport backtracking from './algorithms/backtracking'\nimport visualizeBacktracking from './algorithms/visualizeBacktracking.js'\nimport simulatedAnnealing from \"./algorithms/simulatedAnnealing\";\nimport visualizeSimulatedAnnealing from \"./algorithms/visualizeSimulatedAnnealing\";\nimport loadGrid from './loadGrid'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: [],\n      selectedAlg: 0\n    };\n    this.visualizeAlgorithm = this.visualizeAlgorithm.bind(this)\n    this.loadSGrid = this.loadSGrid.bind(this)\n    this.Node = this.Node.bind(this)\n  }\n\n  visualizeAlgorithm() {\n    let moves = []\n    switch(this.state.selectedAlg) {\n      case 0:\n        console.log(\"No algorithm selected!\")\n        break\n\n      case 1:\n        moves = backtracking(this.state.grid)\n        visualizeBacktracking(moves)\n        break\n      \n      case 2:\n        moves = simulatedAnnealing(this.state.grid)\n        setTimeout(visualizeSimulatedAnnealing(moves),1000)\n        break\n      \n      default:\n        console.log(\"You selected an algorithm!\")\n        break\n    }\n  }\n\n  Node(row, col) {\n    return document.getElementById(`node-${row}-${col}`)\n  } // Gets a node from the screen\n\n  loadSGrid() {\n    this.setState({grid: loadGrid()}, () => console.log(this.state.grid.[0]))\n  //   for (let row = 0; row < 9; row++){\n  //     for (let col = 0; col <9; col++){\n  //         Node(row,col).value = this.state.grid[row][col]\n  //     }\n  // }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Algorithm Visualizer</h1>\n        <Menu \n          props={this.state} \n          handleClick={this.visualizeAlgorithm} \n          loadSGrid={this.loadSGrid}\n        ></Menu>\n        <PathfindingVisualizer></PathfindingVisualizer>\n        <h3>p.s. I love you :heart:</h3>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}