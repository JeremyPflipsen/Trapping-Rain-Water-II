{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Sudoku\\\\my-app\\\\src\\\\PathfindingVisualizer\\\\PathfindingVisualizer.jsx\";\nimport React, { Component } from \"react\";\nimport Node from \"./Node/Node\";\nimport \"./PathfindingVisualizer.css\";\nexport default class PathfindingVisualizer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodes: []\n    };\n  }\n\n  componentDidMount() {\n    const nodes = [];\n\n    for (let row = 0; row < 9; row++) {\n      const currentRow = [];\n\n      for (let col = 0; col < 9; col++) {\n        const currentNode = {\n          col,\n          row,\n          isStart: row === 0 && col === 0,\n          isFinish: row === 8 && col === 8\n        };\n        currentRow.push([currentNode]); // console.log(currentNode.isStart)\n      }\n\n      nodes.push(currentRow); // console.log(currentRow[0][0].isStart)\n    }\n\n    this.setState({\n      nodes\n    });\n  }\n\n  render() {\n    const {\n      nodes\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, \"console.log(this.state)\", nodes.map((row, rowIdx) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: rowIdx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, row.map((node, nodeIdx) => {\n        const {\n          col,\n          row,\n          isStart,\n          isFinish\n        } = node; // console.log(isStart)\n\n        return /*#__PURE__*/React.createElement(Node, {\n          key: nodeIdx,\n          isStart: isStart,\n          isFinish: isFinish,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }\n        });\n      }));\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/hp/Desktop/Sudoku/my-app/src/PathfindingVisualizer/PathfindingVisualizer.jsx"],"names":["React","Component","Node","PathfindingVisualizer","constructor","props","state","nodes","componentDidMount","row","currentRow","col","currentNode","isStart","isFinish","push","setState","render","map","rowIdx","node","nodeIdx"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAO,6BAAP;AAEA,eAAe,MAAMC,qBAAN,SAAoCF,SAApC,CAA8C;AAC3DG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMD,KAAK,GAAG,EAAd;;AACA,SAAK,IAAIE,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,CAAxB,EAA2BA,GAAG,EAA9B,EAAkC;AAChC,YAAMC,UAAU,GAAG,EAAnB;;AACA,WAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,CAAxB,EAA2BA,GAAG,EAA9B,EAAkC;AAChC,cAAMC,WAAW,GAAG;AAClBD,UAAAA,GADkB;AAElBF,UAAAA,GAFkB;AAGlBI,UAAAA,OAAO,EAAEJ,GAAG,KAAK,CAAR,IAAaE,GAAG,KAAK,CAHZ;AAIlBG,UAAAA,QAAQ,EAAEL,GAAG,KAAK,CAAR,IAAaE,GAAG,KAAK;AAJb,SAApB;AAMAD,QAAAA,UAAU,CAACK,IAAX,CAAgB,CAACH,WAAD,CAAhB,EAPgC,CAQhC;AACD;;AACDL,MAAAA,KAAK,CAACQ,IAAN,CAAWL,UAAX,EAZgC,CAahC;AACD;;AACD,SAAKM,QAAL,CAAc;AAAET,MAAAA;AAAF,KAAd;AACD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEGC,KAAK,CAACW,GAAN,CAAU,CAACT,GAAD,EAAMU,MAAN,KAAiB;AAC1B,0BACE;AAAK,QAAA,GAAG,EAAEA,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGV,GAAG,CAACS,GAAJ,CAAQ,CAACE,IAAD,EAAOC,OAAP,KAAmB;AAC1B,cAAM;AAAEV,UAAAA,GAAF;AAAMF,UAAAA,GAAN;AAAWI,UAAAA,OAAX;AAAoBC,UAAAA;AAApB,YAAiCM,IAAvC,CAD0B,CAE1B;;AACA,4BACE,oBAAC,IAAD;AACE,UAAA,GAAG,EAAIC,OADT;AAEE,UAAA,OAAO,EAAIR,OAFb;AAGE,UAAA,QAAQ,EAAEC,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,OATA,CADH,CADF;AAcD,KAfA,CAFH,CADF;AAqBD;;AAnD0D","sourcesContent":["import React, { Component } from \"react\";\r\nimport Node from \"./Node/Node\";\r\n\r\nimport \"./PathfindingVisualizer.css\";\r\n\r\nexport default class PathfindingVisualizer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nodes: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const nodes = [];\r\n    for (let row = 0; row < 9; row++) {\r\n      const currentRow = [];\r\n      for (let col = 0; col < 9; col++) {\r\n        const currentNode = {\r\n          col,\r\n          row,\r\n          isStart: row === 0 && col === 0,\r\n          isFinish: row === 8 && col === 8,\r\n        };\r\n        currentRow.push([currentNode]);\r\n        // console.log(currentNode.isStart)\r\n      }\r\n      nodes.push(currentRow);\r\n      // console.log(currentRow[0][0].isStart)\r\n    }\r\n    this.setState({ nodes });\r\n  }\r\n\r\n  render() {\r\n    const { nodes } = this.state;\r\n    return (\r\n      <div className = 'grid'>\r\n        console.log(this.state)\r\n        {nodes.map((row, rowIdx) => {\r\n          return (\r\n            <div key={rowIdx}>\r\n              {row.map((node, nodeIdx) => {\r\n                const { col,row, isStart, isFinish } = node;\r\n                // console.log(isStart)\r\n                return (\r\n                  <Node \r\n                    key = {nodeIdx}\r\n                    isStart = {isStart}\r\n                    isFinish={isFinish}></Node>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}