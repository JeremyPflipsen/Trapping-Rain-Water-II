{"ast":null,"code":"import initialAlg from\"./algorithms/initialAlg\";//This function is bound to App.js so that App may\n//call any algorithm and visualize it\nexport default function visualizeAlgorithm(){var _this=this;switch(this.state.selectedAlg){case 0:console.log(\"No algorithm selected!\");break;case 1:if(this.state.mode===\"play\"){//currently in play mode, let's pause it. This will end the current instance of visualize InitialAlg\nthis.setState({mode:\"pause\"});document.getElementById(\"playPause\").innerHTML=\"Play\";break;}//mode === \"pause\" so we initiate the play mode\ndocument.getElementById(\"playPause\").innerHTML=\"Pause\";this.setState({mode:\"play\"});setTimeout(function(){var temp=initialAlg(_this.state.grid);_this.visualizeInitialAlg(temp.moves,temp.solvable);_this.setState({moves:temp.moves});},1);break;default:console.log(\"You selected an algorithm!\");break;}}","map":{"version":3,"sources":["C:/Users/hp/Desktop/Trapping-Rain-Water-II/my-app/src/visualizeAlgorithm.js"],"names":["initialAlg","visualizeAlgorithm","state","selectedAlg","console","log","mode","setState","document","getElementById","innerHTML","setTimeout","temp","grid","visualizeInitialAlg","moves","solvable"],"mappings":"AAAA,MAAOA,CAAAA,UAAP,KAAuB,yBAAvB,CAEA;AACA;AAEA,cAAe,SAASC,CAAAA,kBAAT,EAA8B,gBAC3C,OAAQ,KAAKC,KAAL,CAAWC,WAAnB,EACE,IAAK,EAAL,CACEC,OAAO,CAACC,GAAR,CAAY,wBAAZ,EACA,MAEF,IAAK,EAAL,CACE,GAAI,KAAKH,KAAL,CAAWI,IAAX,GAAoB,MAAxB,CAAgC,CAC9B;AACA,KAAKC,QAAL,CAAc,CAAED,IAAI,CAAE,OAAR,CAAd,EACAE,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,SAArC,CAAiD,MAAjD,CACA,MACD,CACD;AACAF,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,SAArC,CAAiD,OAAjD,CACA,KAAKH,QAAL,CAAc,CAAED,IAAI,CAAE,MAAR,CAAd,EACAK,UAAU,CAAC,UAAM,CACf,GAAIC,CAAAA,IAAI,CAAGZ,UAAU,CAAC,KAAI,CAACE,KAAL,CAAWW,IAAZ,CAArB,CACA,KAAI,CAACC,mBAAL,CAAyBF,IAAI,CAACG,KAA9B,CAAqCH,IAAI,CAACI,QAA1C,EACA,KAAI,CAACT,QAAL,CAAc,CAAEQ,KAAK,CAAEH,IAAI,CAACG,KAAd,CAAd,EACD,CAJS,CAIP,CAJO,CAAV,CAKA,MAEF,QACEX,OAAO,CAACC,GAAR,CAAY,4BAAZ,EACA,MAxBJ,CA0BD","sourcesContent":["import initialAlg from \"./algorithms/initialAlg\"\r\n\r\n//This function is bound to App.js so that App may\r\n//call any algorithm and visualize it\r\n\r\nexport default function visualizeAlgorithm() {\r\n  switch (this.state.selectedAlg) {\r\n    case 0:\r\n      console.log(\"No algorithm selected!\")\r\n      break\r\n\r\n    case 1:\r\n      if (this.state.mode === \"play\") {\r\n        //currently in play mode, let's pause it. This will end the current instance of visualize InitialAlg\r\n        this.setState({ mode: \"pause\" })\r\n        document.getElementById(\"playPause\").innerHTML = \"Play\"\r\n        break\r\n      }\r\n      //mode === \"pause\" so we initiate the play mode\r\n      document.getElementById(\"playPause\").innerHTML = \"Pause\"\r\n      this.setState({ mode: \"play\" })\r\n      setTimeout(() => {\r\n        let temp = initialAlg(this.state.grid)\r\n        this.visualizeInitialAlg(temp.moves, temp.solvable)\r\n        this.setState({ moves: temp.moves })\r\n      }, 1)\r\n      break\r\n\r\n    default:\r\n      console.log(\"You selected an algorithm!\")\r\n      break\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}