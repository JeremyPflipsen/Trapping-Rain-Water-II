{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Sudoku\\\\my-app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport PathfindingVisualizer from \"./PathfindingVisualizer/PathfindingVisualizer\";\nimport Menu from './Menu';\nimport loadGrid from './loadGrid';\nimport loadSGrid from './loadSGrid';\nimport About from './About';\nimport selectAlg from './selectAlg';\nimport visualizeAlgorithm from './visualizeAlgorithm';\nimport Error from './Error';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: [],\n      selectedAlg: 0\n    };\n    this.visualizeAlgorithm = visualizeAlgorithm.bind(this);\n    this.selectAlg = selectAlg.bind(this);\n    this.inputValueChange = this.inputValueChange.bind(this);\n  }\n\n  inputValueChange(row, col, event) {\n    if (event.target.value >= 0 && event.target.value <= 9) {\n      const newGrid = this.state.grid.slice();\n      newGrid[row][col] = event.target.value;\n      this.setState({\n        grid: newGrid\n      });\n    }\n  }\n\n  componentDidMount() {\n    const nodes = [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]];\n    this.setState({\n      grid: nodes\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"Header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, \"Algorithm Visualizer\"), /*#__PURE__*/React.createElement(Menu, {\n      selectAlg: this.selectAlg,\n      handleClick: this.visualizeAlgorithm,\n      loadSGrid: () => {\n        this.setState({\n          grid: loadSGrid()\n        }, () => loadGrid(this.state.grid));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flexbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(About, {\n      selectedAlg: this.state.selectedAlg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(PathfindingVisualizer, {\n      inputValueChange: this.inputValueChange,\n      grid: this.state.grid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }), this.state.selectedAlg === 2 || this.state.selectedAlg === 3 ? /*#__PURE__*/React.createElement(Error, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, \"p.s. I love you :heart:\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/hp/Desktop/Sudoku/my-app/src/App.js"],"names":["React","PathfindingVisualizer","Menu","loadGrid","loadSGrid","About","selectAlg","visualizeAlgorithm","Error","App","Component","constructor","props","state","grid","selectedAlg","bind","inputValueChange","row","col","event","target","value","newGrid","slice","setState","componentDidMount","nodes","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,qBAAP,MAAkC,+CAAlC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAIA,SAAKR,kBAAL,GAA0BA,kBAAkB,CAACS,IAAnB,CAAwB,IAAxB,CAA1B;AACA,SAAKV,SAAL,GAAiBA,SAAS,CAACU,IAAV,CAAe,IAAf,CAAjB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAEDC,EAAAA,gBAAgB,CAAEC,GAAF,EAAMC,GAAN,EAAUC,KAAV,EAAgB;AAC9B,QAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,IAAsB,CAAtB,IAA2BF,KAAK,CAACC,MAAN,CAAaC,KAAb,IAAsB,CAArD,EAAuD;AACrD,YAAMC,OAAO,GAAG,KAAKV,KAAL,CAAWC,IAAX,CAAgBU,KAAhB,EAAhB;AACAD,MAAAA,OAAO,CAACL,GAAD,CAAP,CAAaC,GAAb,IAAoBC,KAAK,CAACC,MAAN,CAAaC,KAAjC;AACA,WAAKG,QAAL,CAAc;AACZX,QAAAA,IAAI,EAAES;AADM,OAAd;AAGD;AACF;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,KAAK,GAAG,CACZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CADY,EAEZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAFY,EAGZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAHY,EAIZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAJY,EAKZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CALY,EAMZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CANY,EAOZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAPY,EAQZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CARY,EASZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CATY,CAAd;AAYA,SAAKF,QAAL,CAAc;AACZX,MAAAA,IAAI,EAAEa;AADM,KAAd;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE,oBAAC,IAAD;AACE,MAAA,SAAS,EAAE,KAAKtB,SADlB;AAEE,MAAA,WAAW,EAAE,KAAKC,kBAFpB;AAGE,MAAA,SAAS,EAAE,MAAM;AACf,aAAKkB,QAAL,CAAc;AAACX,UAAAA,IAAI,EAAEV,SAAS;AAAhB,SAAd,EAAmC,MAAMD,QAAQ,CAAC,KAAKU,KAAL,CAAWC,IAAZ,CAAjD;AAAoE,OAJxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAQE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAE,KAAKD,KAAL,CAAWE,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,qBAAD;AAAuB,MAAA,gBAAgB,EAAE,KAAKE,gBAA9C;AAAgE,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWC,IAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGG,KAAKD,KAAL,CAAWE,WAAX,KAA2B,CAA3B,IAAgC,KAAKF,KAAL,CAAWE,WAAX,KAA2B,CAA3D,gBACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,gBAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALN,CARF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAhBF,CADF;AAoBD;;AA7D+B;;AAgElC,eAAeN,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport PathfindingVisualizer from \"./PathfindingVisualizer/PathfindingVisualizer\";\nimport Menu from './Menu'\nimport loadGrid from './loadGrid'\nimport loadSGrid from './loadSGrid'\nimport About from './About'\nimport selectAlg from './selectAlg'\nimport visualizeAlgorithm from './visualizeAlgorithm'\nimport Error from './Error'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: [],\n      selectedAlg: 0\n    };\n    this.visualizeAlgorithm = visualizeAlgorithm.bind(this)\n    this.selectAlg = selectAlg.bind(this)\n    this.inputValueChange = this.inputValueChange.bind(this)\n  }\n\n  inputValueChange (row,col,event){\n    if (event.target.value >= 0 && event.target.value <= 9){\n      const newGrid = this.state.grid.slice()\n      newGrid[row][col] = event.target.value\n      this.setState({\n        grid: newGrid\n      })\n    }\n  }\n\n  componentDidMount() {\n    const nodes = [\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0]\n    ]\n\n    this.setState({\n      grid: nodes\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className='Header'>Algorithm Visualizer</h1>\n        <Menu\n          selectAlg={this.selectAlg}\n          handleClick={this.visualizeAlgorithm}\n          loadSGrid={() => {\n            this.setState({grid: loadSGrid()}, () => loadGrid(this.state.grid))}}\n        ></Menu>\n        <div className='flexbox'>\n          <About selectedAlg={this.state.selectedAlg}></About>\n          <PathfindingVisualizer inputValueChange={this.inputValueChange} grid={this.state.grid} ></PathfindingVisualizer>\n          {this.state.selectedAlg === 2 || this.state.selectedAlg === 3 ?\n            <Error></Error>\n            : <div></div>\n          }\n        </div>\n        <h3>p.s. I love you :heart:</h3>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}