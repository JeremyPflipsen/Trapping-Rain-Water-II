{"ast":null,"code":"function Node(row,col){return document.getElementById(\"node-\".concat(row,\"-\").concat(col));}// Gets a node from the screen\n//this function is bound to App\n//so that it can call the functions in App\nexport default function stepBackward(){//copy funtions from app so they can be called within helper\nvar setCurrIndex=this.setCurrIndex;var currIndex=this.state.currIndex;var moves=this.state.moves;if(currIndex<2){//no previous move so return\n//no need to set moves or solvable since play or stepForward will do that in the first step\n// console.log(\"no previous move\")\nreturn;}else if(currIndex===2){//Only first step is done so undo first step\n//make initial border\nvar tempMoves=moves[0].currMoves;for(var i=0;i<tempMoves.length;i++){Node(tempMoves[i][0],tempMoves[i][1]).className=\"node\";}//color corners\ntempMoves=moves[1].currMoves;for(var _i=0;_i<tempMoves.length;_i++){Node(tempMoves[_i][0],tempMoves[_i][1]).className=\"node\";}//set About color\ndocument.getElementById(\"step1\").style.background=\"rgba(255, 0, 43, 0)\";//we finished step 0, so currIndex = 2 now\ncurrIndex=0;this.setState({currIndex:currIndex});}else if(currIndex===moves.length&&document.getElementById(\"end\").style.background===\"rgba(255, 0, 43, 0.3)\"){//we're at the end step. Note that the end step and the step before have the same currIndex,\n//which is why we don't update currIndex in this step\n//remove color of end step\ndocument.getElementById(\"end\").style.background=\"rgba(255, 0, 43, 0)\";//set color of step 4\ndocument.getElementById(\"step4\").style.background=\"rgba(255, 0, 43, 0.3)\";}else{//no more special cases\n//set color of steps\ndocument.getElementById(\"step\".concat(moves[currIndex-2].currStep+1)).style.background=\"rgba(255, 0, 43, 0.3)\";//reset About color from previous step\ndocument.getElementById(\"step\".concat(moves[currIndex-1].currStep+1)).style.background=\"rgba(255, 0, 43, 0)\";//set background opacity of last item to 0 to remove highlighting.\n//update total and waterLevel on screen\ndocument.getElementById(\"Error\").innerHTML=\"Total Water: \".concat(moves[currIndex-2].total,\" \\n Water Level: \").concat(moves[currIndex-2].waterLevel);//check the currStep\nvar move,prevMove;if(moves[currIndex-1].currStep===1){//highlight lowest border node\nmove=moves[currIndex-1].currMoves[0];Node(move[0],move[1]).className=\"node-finish\";}else if(moves[currIndex-1].currStep===2){//add new border node\nmove=moves[currIndex-1].currMoves[0];Node(move[0],move[1]).className=\"node\";}else if(moves[currIndex-1].currStep===3){//add removed border nodes\nfor(var _i2=0;_i2<moves[currIndex-1].currMoves.length;_i2++){//remove border node\nmove=moves[currIndex-1].currMoves[_i2];Node(move[0],move[1]).className=\"node-finish\";}//add highlighting of lowest border node\nprevMove=moves[currIndex-3].currMoves[0];Node(prevMove[0],prevMove[1]).className=\"node-start\";}currIndex-=1;setCurrIndex(currIndex);}}","map":{"version":3,"sources":["C:/Users/hp/Desktop/Trapping-Rain-Water-II/my-app/src/stepBackward.js"],"names":["Node","row","col","document","getElementById","stepBackward","setCurrIndex","currIndex","state","moves","tempMoves","currMoves","i","length","className","style","background","setState","currStep","innerHTML","total","waterLevel","move","prevMove"],"mappings":"AAAA,QAASA,CAAAA,IAAT,CAAcC,GAAd,CAAmBC,GAAnB,CAAwB,CACtB,MAAOC,CAAAA,QAAQ,CAACC,cAAT,gBAAgCH,GAAhC,aAAuCC,GAAvC,EAAP,CACD,CAAC;AAEF;AACA;AAEA,cAAe,SAASG,CAAAA,YAAT,EAAwB,CACrC;AACA,GAAIC,CAAAA,YAAY,CAAG,KAAKA,YAAxB,CACA,GAAIC,CAAAA,SAAS,CAAG,KAAKC,KAAL,CAAWD,SAA3B,CACA,GAAIE,CAAAA,KAAK,CAAG,KAAKD,KAAL,CAAWC,KAAvB,CAEA,GAAIF,SAAS,CAAG,CAAhB,CAAmB,CACjB;AACA;AACA;AACA,OACD,CALD,IAKO,IAAIA,SAAS,GAAK,CAAlB,CAAqB,CAC1B;AACA;AACA,GAAIG,CAAAA,SAAS,CAAGD,KAAK,CAAC,CAAD,CAAL,CAASE,SAAzB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,SAAS,CAACG,MAA9B,CAAsCD,CAAC,EAAvC,CAA2C,CACzCZ,IAAI,CAACU,SAAS,CAACE,CAAD,CAAT,CAAa,CAAb,CAAD,CAAkBF,SAAS,CAACE,CAAD,CAAT,CAAa,CAAb,CAAlB,CAAJ,CAAuCE,SAAvC,CAAmD,MAAnD,CACD,CACD;AACAJ,SAAS,CAAGD,KAAK,CAAC,CAAD,CAAL,CAASE,SAArB,CACA,IAAK,GAAIC,CAAAA,EAAC,CAAG,CAAb,CAAgBA,EAAC,CAAGF,SAAS,CAACG,MAA9B,CAAsCD,EAAC,EAAvC,CAA2C,CACzCZ,IAAI,CAACU,SAAS,CAACE,EAAD,CAAT,CAAa,CAAb,CAAD,CAAkBF,SAAS,CAACE,EAAD,CAAT,CAAa,CAAb,CAAlB,CAAJ,CAAuCE,SAAvC,CAAmD,MAAnD,CACD,CAED;AACAX,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCW,KAAjC,CAAuCC,UAAvC,CAAoD,qBAApD,CAEA;AACAT,SAAS,CAAG,CAAZ,CACA,KAAKU,QAAL,CAAc,CAAEV,SAAS,CAAEA,SAAb,CAAd,EACD,CAnBM,IAmBA,IACLA,SAAS,GAAKE,KAAK,CAACI,MAApB,EACAV,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BW,KAA/B,CAAqCC,UAArC,GAAoD,uBAF/C,CAGL,CACA;AACA;AAEA;AACAb,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BW,KAA/B,CAAqCC,UAArC,CAAkD,qBAAlD,CAEA;AACAb,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCW,KAAjC,CAAuCC,UAAvC,CAAoD,uBAApD,CACD,CAZM,IAYA,CACL;AAEA;AACAb,QAAQ,CAACC,cAAT,eACSK,KAAK,CAACF,SAAS,CAAG,CAAb,CAAL,CAAqBW,QAArB,CAAgC,CADzC,GAEEH,KAFF,CAEQC,UAFR,CAEqB,uBAFrB,CAGA;AACAb,QAAQ,CAACC,cAAT,eACSK,KAAK,CAACF,SAAS,CAAG,CAAb,CAAL,CAAqBW,QAArB,CAAgC,CADzC,GAEEH,KAFF,CAEQC,UAFR,CAEqB,qBAFrB,CAE2C;AAE3C;AACAb,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCe,SAAjC,wBACEV,KAAK,CAACF,SAAS,CAAG,CAAb,CAAL,CAAqBa,KADvB,6BAEoBX,KAAK,CAACF,SAAS,CAAG,CAAb,CAAL,CAAqBc,UAFzC,EAIA;AACA,GAAIC,CAAAA,IAAJ,CAAUC,QAAV,CACA,GAAId,KAAK,CAACF,SAAS,CAAG,CAAb,CAAL,CAAqBW,QAArB,GAAkC,CAAtC,CAAyC,CACvC;AACAI,IAAI,CAAGb,KAAK,CAACF,SAAS,CAAG,CAAb,CAAL,CAAqBI,SAArB,CAA+B,CAA/B,CAAP,CACAX,IAAI,CAACsB,IAAI,CAAC,CAAD,CAAL,CAAUA,IAAI,CAAC,CAAD,CAAd,CAAJ,CAAuBR,SAAvB,CAAmC,aAAnC,CACD,CAJD,IAIO,IAAIL,KAAK,CAACF,SAAS,CAAG,CAAb,CAAL,CAAqBW,QAArB,GAAkC,CAAtC,CAAyC,CAC9C;AACAI,IAAI,CAAGb,KAAK,CAACF,SAAS,CAAG,CAAb,CAAL,CAAqBI,SAArB,CAA+B,CAA/B,CAAP,CACAX,IAAI,CAACsB,IAAI,CAAC,CAAD,CAAL,CAAUA,IAAI,CAAC,CAAD,CAAd,CAAJ,CAAuBR,SAAvB,CAAmC,MAAnC,CACD,CAJM,IAIA,IAAIL,KAAK,CAACF,SAAS,CAAG,CAAb,CAAL,CAAqBW,QAArB,GAAkC,CAAtC,CAAyC,CAC9C;AACA,IAAK,GAAIN,CAAAA,GAAC,CAAG,CAAb,CAAgBA,GAAC,CAAGH,KAAK,CAACF,SAAS,CAAG,CAAb,CAAL,CAAqBI,SAArB,CAA+BE,MAAnD,CAA2DD,GAAC,EAA5D,CAAgE,CAC9D;AACAU,IAAI,CAAGb,KAAK,CAACF,SAAS,CAAG,CAAb,CAAL,CAAqBI,SAArB,CAA+BC,GAA/B,CAAP,CACAZ,IAAI,CAACsB,IAAI,CAAC,CAAD,CAAL,CAAUA,IAAI,CAAC,CAAD,CAAd,CAAJ,CAAuBR,SAAvB,CAAmC,aAAnC,CACD,CAED;AACAS,QAAQ,CAAGd,KAAK,CAACF,SAAS,CAAG,CAAb,CAAL,CAAqBI,SAArB,CAA+B,CAA/B,CAAX,CACAX,IAAI,CAACuB,QAAQ,CAAC,CAAD,CAAT,CAAcA,QAAQ,CAAC,CAAD,CAAtB,CAAJ,CAA+BT,SAA/B,CAA2C,YAA3C,CACD,CAEDP,SAAS,EAAI,CAAb,CACAD,YAAY,CAACC,SAAD,CAAZ,CACD,CACF","sourcesContent":["function Node(row, col) {\r\n  return document.getElementById(`node-${row}-${col}`)\r\n} // Gets a node from the screen\r\n\r\n//this function is bound to App\r\n//so that it can call the functions in App\r\n\r\nexport default function stepBackward() {\r\n  //copy funtions from app so they can be called within helper\r\n  let setCurrIndex = this.setCurrIndex\r\n  let currIndex = this.state.currIndex\r\n  let moves = this.state.moves\r\n\r\n  if (currIndex < 2) {\r\n    //no previous move so return\r\n    //no need to set moves or solvable since play or stepForward will do that in the first step\r\n    // console.log(\"no previous move\")\r\n    return\r\n  } else if (currIndex === 2) {\r\n    //Only first step is done so undo first step\r\n    //make initial border\r\n    let tempMoves = moves[0].currMoves\r\n    for (let i = 0; i < tempMoves.length; i++) {\r\n      Node(tempMoves[i][0], tempMoves[i][1]).className = \"node\"\r\n    }\r\n    //color corners\r\n    tempMoves = moves[1].currMoves\r\n    for (let i = 0; i < tempMoves.length; i++) {\r\n      Node(tempMoves[i][0], tempMoves[i][1]).className = \"node\"\r\n    }\r\n\r\n    //set About color\r\n    document.getElementById(\"step1\").style.background = \"rgba(255, 0, 43, 0)\"\r\n\r\n    //we finished step 0, so currIndex = 2 now\r\n    currIndex = 0\r\n    this.setState({ currIndex: currIndex })\r\n  } else if (\r\n    currIndex === moves.length &&\r\n    document.getElementById(\"end\").style.background === \"rgba(255, 0, 43, 0.3)\"\r\n  ) {\r\n    //we're at the end step. Note that the end step and the step before have the same currIndex,\r\n    //which is why we don't update currIndex in this step\r\n\r\n    //remove color of end step\r\n    document.getElementById(\"end\").style.background = \"rgba(255, 0, 43, 0)\"\r\n\r\n    //set color of step 4\r\n    document.getElementById(\"step4\").style.background = \"rgba(255, 0, 43, 0.3)\"\r\n  } else {\r\n    //no more special cases\r\n\r\n    //set color of steps\r\n    document.getElementById(\r\n      `step${moves[currIndex - 2].currStep + 1}`\r\n    ).style.background = \"rgba(255, 0, 43, 0.3)\"\r\n    //reset About color from previous step\r\n    document.getElementById(\r\n      `step${moves[currIndex - 1].currStep + 1}`\r\n    ).style.background = \"rgba(255, 0, 43, 0)\" //set background opacity of last item to 0 to remove highlighting.\r\n\r\n    //update total and waterLevel on screen\r\n    document.getElementById(\"Error\").innerHTML = `Total Water: ${\r\n      moves[currIndex - 2].total\r\n    } \\n Water Level: ${moves[currIndex - 2].waterLevel}`\r\n\r\n    //check the currStep\r\n    let move, prevMove\r\n    if (moves[currIndex - 1].currStep === 1) {\r\n      //highlight lowest border node\r\n      move = moves[currIndex - 1].currMoves[0]\r\n      Node(move[0], move[1]).className = \"node-finish\"\r\n    } else if (moves[currIndex - 1].currStep === 2) {\r\n      //add new border node\r\n      move = moves[currIndex - 1].currMoves[0]\r\n      Node(move[0], move[1]).className = \"node\"\r\n    } else if (moves[currIndex - 1].currStep === 3) {\r\n      //add removed border nodes\r\n      for (let i = 0; i < moves[currIndex - 1].currMoves.length; i++) {\r\n        //remove border node\r\n        move = moves[currIndex - 1].currMoves[i]\r\n        Node(move[0], move[1]).className = \"node-finish\"\r\n      }\r\n\r\n      //add highlighting of lowest border node\r\n      prevMove = moves[currIndex - 3].currMoves[0]\r\n      Node(prevMove[0], prevMove[1]).className = \"node-start\"\r\n    }\r\n\r\n    currIndex -= 1\r\n    setCurrIndex(currIndex)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}