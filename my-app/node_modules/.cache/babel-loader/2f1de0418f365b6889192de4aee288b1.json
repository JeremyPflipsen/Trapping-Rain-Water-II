{"ast":null,"code":"function Node(row, col) {\n  return document.getElementById(`node-${row}-${col}`);\n} // Gets a node from the screen\n\n\nfunction NodeVal(row, col) {\n  return Number(Node(row, col).value);\n}\n\nfunction showErrors(length) {\n  let seen = [];\n  setTimeout(() => {\n    //check the rows\n    for (let row = 0; row < 9; row++) {\n      for (let col = 0; col < 9; col++) {\n        if (seen.includes(NodeVal(row, col))) {\n          Node(row, col).className = 'node-finish';\n        } else {\n          seen.push(NodeVal(row, col));\n        }\n      }\n\n      seen = [];\n    } //check the columns\n\n\n    for (let col = 0; col < 9; col++) {\n      for (let row = 0; row < 9; row++) {\n        if (seen.includes(NodeVal(row, col))) {\n          Node(row, col).className = 'node-finish';\n        } else {\n          seen.push(NodeVal(row, col));\n        }\n      }\n\n      seen = [];\n    }\n  }, 3000 * Math.pow(Math.log(length + 2), 1));\n}\n\nexport default function visualizeSimulatedAnnealing(moves, changeNodeVal) {\n  for (let i = 2; i < moves.length; i = i + 2) {\n    setTimeout(() => {\n      Node(moves[i][0], moves[i][1]).className = 'node-start'; //color node about to be changed\n\n      Node(moves[i + 1][0], moves[i + 1][1]).className = 'node-start';\n      document.getElementById('Error').innerHTML = `Error: ${moves[i - 2][3]}`;\n    }, 3000 * Math.pow(Math.log(i), 1) - 1000);\n    setTimeout(() => {\n      Node(moves[i][0], moves[i][1]).value = moves[i][2];\n      Node(moves[i + 1][0], moves[i + 1][1]).value = moves[i + 1][2];\n      Node(moves[i][0], moves[i][1]).className = 'node'; //remove color from previous node if we back up\n\n      Node(moves[i + 1][0], moves[i + 1][1]).className = 'node';\n    }, 3000 * Math.pow(Math.log(i + 2), 1) - 1000);\n  }\n\n  showErrors(moves.length);\n}","map":{"version":3,"sources":["C:/Users/hp/Desktop/Sudoku/my-app/src/algorithms/visualizeSimulatedAnnealing.js"],"names":["Node","row","col","document","getElementById","NodeVal","Number","value","showErrors","length","seen","setTimeout","includes","className","push","Math","pow","log","visualizeSimulatedAnnealing","moves","changeNodeVal","i","innerHTML"],"mappings":"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","sourcesContent":["function Node(row, col) {\r\n    return document.getElementById(`node-${row}-${col}`)\r\n} // Gets a node from the screen\r\n\r\nfunction NodeVal(row,col) {\r\n    return Number(Node(row,col).value)\r\n}\r\n\r\nfunction showErrors(length) {\r\n    let seen = []\r\n\r\n    setTimeout(() => {\r\n        //check the rows\r\n    for (let row = 0; row < 9; row ++) {\r\n        for (let col = 0; col < 9; col ++) {\r\n            if (seen.includes(NodeVal(row,col))) {\r\n                Node(row,col).className = 'node-finish'\r\n            }\r\n            else {\r\n                seen.push(NodeVal(row,col))\r\n            }\r\n        }\r\n        seen = []\r\n    }\r\n    //check the columns\r\n    for (let col = 0; col < 9; col ++) {\r\n        for (let row = 0; row < 9; row ++) {\r\n            if (seen.includes(NodeVal(row,col))) {\r\n                Node(row,col).className = 'node-finish'\r\n            }\r\n            else {\r\n                seen.push(NodeVal(row,col))\r\n            }\r\n        }\r\n        seen = []\r\n    }\r\n    }, 3000*Math.pow(Math.log(length+2),1))\r\n}\r\n\r\nexport default function visualizeSimulatedAnnealing(moves,changeNodeVal) {\r\n    for (let i = 2; i < moves.length; i = i+2) {\r\n    \r\n        setTimeout(() => {\r\n            Node(moves[i][0],moves[i][1]).className = 'node-start' //color node about to be changed\r\n            Node(moves[i+1][0],moves[i+1][1]).className = 'node-start'\r\n            document.getElementById('Error').innerHTML = `Error: ${moves[i-2][3]}`\r\n        }, 3000*Math.pow(Math.log(i),1)-1000)\r\n        setTimeout(() => {\r\n            Node(moves[i][0],moves[i][1]).value = moves[i][2]\r\n            Node(moves[i+1][0],moves[i+1][1]).value = moves[i+1][2]\r\n            Node(moves[i][0],moves[i][1]).className = 'node' //remove color from previous node if we back up\r\n            Node(moves[i+1][0],moves[i+1][1]).className = 'node'\r\n            \r\n        }, 3000*Math.pow(Math.log(i+2),1)-1000)\r\n    }\r\n\r\n    showErrors(moves.length)\r\n}"]},"metadata":{},"sourceType":"module"}