{"ast":null,"code":"function Node(row, col) {\n  return document.getElementById(`node-${row}-${col}`);\n} // Gets a node from the screen\n\n\nexport default function visualizeBacktracking(moves) {\n  for (let i = 0; i < 100; i++) {\n    setTimeout(() => {\n      Node(moves[i][0], moves[i][1]).value = moves[i][2];\n      Node(moves[i][0], moves[i][1]).className = 'node-finish';\n    }, 1000 * i);\n  }\n\n  for (let i = 100; i < 1000; i++) {\n    setTimeout(() => {\n      Node(moves[i][0], moves[i][1]).value = moves[i][2];\n      Node(moves[i][0], moves[i][1]).className = 'node-finish';\n    }, 100 * i + 100000);\n  }\n\n  for (let i = 1000; i < moves.length; i++) {\n    setTimeout(() => {\n      Node(moves[i][0], moves[i][1]).value = moves[i][2];\n      Node(moves[i][0], moves[i][1]).className = 'node-finish';\n    }, i + 100000 + 90000);\n  }\n\n  setTimeout(() => {\n    for (let row = 0; row < 9; row++) {\n      for (let col = 0; col < 9; col++) {\n        Node(row, col).className = 'node-start';\n      }\n    }\n  }, moves.length);\n}","map":{"version":3,"sources":["C:/Users/hp/Desktop/Sudoku/my-app/src/algorithms/visualizeBacktracking.js"],"names":["Node","row","col","document","getElementById","visualizeBacktracking","moves","i","setTimeout","value","className","length"],"mappings":"AAAA,SAASA,IAAT,CAAcC,GAAd,EAAmBC,GAAnB,EAAwB;AACpB,SAAOC,QAAQ,CAACC,cAAT,CAAyB,QAAOH,GAAI,IAAGC,GAAI,EAA3C,CAAP;AACH,C,CAAC;;;AAEF,eAAe,SAASG,qBAAT,CAA+BC,KAA/B,EAAsC;AACjD,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1BC,IAAAA,UAAU,CAAC,MAAM;AACbR,MAAAA,IAAI,CAACM,KAAK,CAACC,CAAD,CAAL,CAAS,CAAT,CAAD,EAAaD,KAAK,CAACC,CAAD,CAAL,CAAS,CAAT,CAAb,CAAJ,CAA8BE,KAA9B,GAAsCH,KAAK,CAACC,CAAD,CAAL,CAAS,CAAT,CAAtC;AACAP,MAAAA,IAAI,CAACM,KAAK,CAACC,CAAD,CAAL,CAAS,CAAT,CAAD,EAAaD,KAAK,CAACC,CAAD,CAAL,CAAS,CAAT,CAAb,CAAJ,CAA8BG,SAA9B,GAA0C,aAA1C;AACH,KAHS,EAGP,OAAKH,CAHE,CAAV;AAIH;;AAED,OAAK,IAAIA,CAAC,GAAG,GAAb,EAAkBA,CAAC,GAAG,IAAtB,EAA4BA,CAAC,EAA7B,EAAiC;AAC7BC,IAAAA,UAAU,CAAC,MAAM;AACbR,MAAAA,IAAI,CAACM,KAAK,CAACC,CAAD,CAAL,CAAS,CAAT,CAAD,EAAaD,KAAK,CAACC,CAAD,CAAL,CAAS,CAAT,CAAb,CAAJ,CAA8BE,KAA9B,GAAsCH,KAAK,CAACC,CAAD,CAAL,CAAS,CAAT,CAAtC;AACAP,MAAAA,IAAI,CAACM,KAAK,CAACC,CAAD,CAAL,CAAS,CAAT,CAAD,EAAaD,KAAK,CAACC,CAAD,CAAL,CAAS,CAAT,CAAb,CAAJ,CAA8BG,SAA9B,GAA0C,aAA1C;AACH,KAHS,EAGP,MAAIH,CAAJ,GAAM,MAHC,CAAV;AAIH;;AAED,OAAK,IAAIA,CAAC,GAAG,IAAb,EAAmBA,CAAC,GAAGD,KAAK,CAACK,MAA7B,EAAqCJ,CAAC,EAAtC,EAA0C;AACtCC,IAAAA,UAAU,CAAC,MAAM;AACbR,MAAAA,IAAI,CAACM,KAAK,CAACC,CAAD,CAAL,CAAS,CAAT,CAAD,EAAaD,KAAK,CAACC,CAAD,CAAL,CAAS,CAAT,CAAb,CAAJ,CAA8BE,KAA9B,GAAsCH,KAAK,CAACC,CAAD,CAAL,CAAS,CAAT,CAAtC;AACAP,MAAAA,IAAI,CAACM,KAAK,CAACC,CAAD,CAAL,CAAS,CAAT,CAAD,EAAaD,KAAK,CAACC,CAAD,CAAL,CAAS,CAAT,CAAb,CAAJ,CAA8BG,SAA9B,GAA0C,aAA1C;AACH,KAHS,EAGPH,CAAC,GAAC,MAAF,GAAS,KAHF,CAAV;AAIH;;AAEDC,EAAAA,UAAU,CAAC,MAAM;AACb,SAAK,IAAIP,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,CAAxB,EAA2BA,GAAG,EAA9B,EAAiC;AAC7B,WAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAE,CAAvB,EAA0BA,GAAG,EAA7B,EAAgC;AAC5BF,QAAAA,IAAI,CAACC,GAAD,EAAKC,GAAL,CAAJ,CAAcQ,SAAd,GAA0B,YAA1B;AACH;AACJ;AACJ,GANS,EAMPJ,KAAK,CAACK,MANC,CAAV;AAOH","sourcesContent":["function Node(row, col) {\r\n    return document.getElementById(`node-${row}-${col}`)\r\n} // Gets a node from the screen\r\n\r\nexport default function visualizeBacktracking(moves) {\r\n    for (let i = 0; i < 100; i++) {\r\n        setTimeout(() => {\r\n            Node(moves[i][0],moves[i][1]).value = moves[i][2]\r\n            Node(moves[i][0],moves[i][1]).className = 'node-finish'\r\n        }, 1000*i)\r\n    }\r\n\r\n    for (let i = 100; i < 1000; i++) {\r\n        setTimeout(() => {\r\n            Node(moves[i][0],moves[i][1]).value = moves[i][2]\r\n            Node(moves[i][0],moves[i][1]).className = 'node-finish'\r\n        }, 100*i+100000)\r\n    }\r\n\r\n    for (let i = 1000; i < moves.length; i++) {\r\n        setTimeout(() => {\r\n            Node(moves[i][0],moves[i][1]).value = moves[i][2]\r\n            Node(moves[i][0],moves[i][1]).className = 'node-finish'\r\n        }, i+100000+90000)\r\n    }\r\n\r\n    setTimeout(() => {\r\n        for (let row = 0; row < 9; row++){\r\n            for (let col = 0; col <9; col++){\r\n                Node(row,col).className = 'node-start'\r\n            }\r\n        }\r\n    }, moves.length)\r\n}"]},"metadata":{},"sourceType":"module"}