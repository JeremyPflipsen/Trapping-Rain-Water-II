{"ast":null,"code":"import _classCallCheck from\"C:/Users/hp/Desktop/Trapping-Rain-Water-II/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/hp/Desktop/Trapping-Rain-Water-II/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/hp/Desktop/Trapping-Rain-Water-II/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/hp/Desktop/Trapping-Rain-Water-II/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import Node from\"./Node/Node\";import\"./PathfindingVisualizer.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var PathfindingVisualizer=/*#__PURE__*/function(_Component){_inherits(PathfindingVisualizer,_Component);var _super=_createSuper(PathfindingVisualizer);function PathfindingVisualizer(props){var _this;_classCallCheck(this,PathfindingVisualizer);_this=_super.call(this,props);_this.state={grid:[[]]};return _this;}_createClass(PathfindingVisualizer,[{key:\"componentDidMount\",value:function componentDidMount(){var nodes=[];for(var row=0;row<this.props.grid.length;row++){var currentRow=[];for(var col=0;col<this.props.grid[0].length;col++){var currentNode={col:col,row:row,isStart:false,isFinish:false};currentRow.push(currentNode);}nodes.push(currentRow);}this.setState({grid:nodes});}},{key:\"render\",value:function render(){var _this2=this;var grid=this.state.grid;if(this.props.grid.length!==this.state.grid.length||this.props.grid[0].length!==this.state.grid[0].length){this.componentDidMount();return/*#__PURE__*/_jsx(\"div\",{});//render will get called again after componentDidMount, so we just return something here in the mean time\n}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"grid\",children:grid.map(function(row,rowIdx){return/*#__PURE__*/_jsx(\"div\",{children:row.map(function(node,nodeIdx){var col=node.col,row=node.row,isStart=node.isStart,isFinish=node.isFinish;return/*#__PURE__*/_jsx(Node,{col:col,row:row,isStart:isStart,isFinish:isFinish,actualValue:_this2.props.grid[row][col],inputValueChange:_this2.props.inputValueChange},nodeIdx);})},rowIdx);})})});}}]);return PathfindingVisualizer;}(Component);export{PathfindingVisualizer as default};","map":{"version":3,"sources":["C:/Users/hp/Desktop/Trapping-Rain-Water-II/my-app/src/PathfindingVisualizer/PathfindingVisualizer.jsx"],"names":["React","Component","Node","PathfindingVisualizer","props","state","grid","nodes","row","length","currentRow","col","currentNode","isStart","isFinish","push","setState","componentDidMount","map","rowIdx","node","nodeIdx","inputValueChange"],"mappings":"gpBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CAEA,MAAO,6BAAP,C,mGAEqBC,CAAAA,qB,8HACnB,+BAAYC,KAAZ,CAAmB,uDACjB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACXC,IAAI,CAAE,CAAC,EAAD,CADK,CAAb,CAFiB,aAKlB,C,mEAED,4BAAoB,CAClB,GAAMC,CAAAA,KAAK,CAAG,EAAd,CACA,IAAK,GAAIC,CAAAA,GAAG,CAAG,CAAf,CAAkBA,GAAG,CAAG,KAAKJ,KAAL,CAAWE,IAAX,CAAgBG,MAAxC,CAAgDD,GAAG,EAAnD,CAAuD,CACrD,GAAME,CAAAA,UAAU,CAAG,EAAnB,CACA,IAAK,GAAIC,CAAAA,GAAG,CAAG,CAAf,CAAkBA,GAAG,CAAG,KAAKP,KAAL,CAAWE,IAAX,CAAgB,CAAhB,EAAmBG,MAA3C,CAAmDE,GAAG,EAAtD,CAA0D,CACxD,GAAMC,CAAAA,WAAW,CAAG,CAClBD,GAAG,CAAHA,GADkB,CAElBH,GAAG,CAAHA,GAFkB,CAGlBK,OAAO,CAAE,KAHS,CAIlBC,QAAQ,CAAE,KAJQ,CAApB,CAMAJ,UAAU,CAACK,IAAX,CAAgBH,WAAhB,EACD,CACDL,KAAK,CAACQ,IAAN,CAAWL,UAAX,EACD,CACD,KAAKM,QAAL,CAAc,CACZV,IAAI,CAAEC,KADM,CAAd,EAGD,C,sBAED,iBAAS,oBACDD,CAAAA,IADC,CACQ,KAAKD,KADb,CACDC,IADC,CAGP,GAAG,KAAKF,KAAL,CAAWE,IAAX,CAAgBG,MAAhB,GAA2B,KAAKJ,KAAL,CAAWC,IAAX,CAAgBG,MAA3C,EAAqD,KAAKL,KAAL,CAAWE,IAAX,CAAgB,CAAhB,EAAmBG,MAAnB,GAA8B,KAAKJ,KAAL,CAAWC,IAAX,CAAgB,CAAhB,EAAmBG,MAAzG,CAAgH,CAC9G,KAAKQ,iBAAL,GACA,mBAAO,cAAP,CAAmB;AACpB,CAED,mBACE,sCACE,YAAK,SAAS,CAAG,MAAjB,UACGX,IAAI,CAACY,GAAL,CAAS,SAACV,GAAD,CAAMW,MAAN,CAAiB,CACzB,mBACE,qBACGX,GAAG,CAACU,GAAJ,CAAQ,SAACE,IAAD,CAAOC,OAAP,CAAmB,IAClBV,CAAAA,GADkB,CACaS,IADb,CAClBT,GADkB,CACbH,GADa,CACaY,IADb,CACbZ,GADa,CACRK,OADQ,CACaO,IADb,CACRP,OADQ,CACCC,QADD,CACaM,IADb,CACCN,QADD,CAE1B,mBACE,KAAC,IAAD,EAEE,GAAG,CAAIH,GAFT,CAGE,GAAG,CAAIH,GAHT,CAIE,OAAO,CAAIK,OAJb,CAKE,QAAQ,CAAEC,QALZ,CAME,WAAW,CAAE,MAAI,CAACV,KAAL,CAAWE,IAAX,CAAgBE,GAAhB,EAAqBG,GAArB,CANf,CAOE,gBAAgB,CAAE,MAAI,CAACP,KAAL,CAAWkB,gBAP/B,EACSD,OADT,CADF,CAWD,CAbA,CADH,EAAUF,MAAV,CADF,CAkBD,CAnBA,CADH,EADF,EADF,CAyBD,C,mCA7DgDlB,S,SAA9BE,qB","sourcesContent":["import React, { Component } from \"react\";\r\nimport Node from \"./Node/Node\";\r\n\r\nimport \"./PathfindingVisualizer.css\";\r\n\r\nexport default class PathfindingVisualizer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      grid: [[]],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const nodes = [];\r\n    for (let row = 0; row < this.props.grid.length; row++) {\r\n      const currentRow = [];\r\n      for (let col = 0; col < this.props.grid[0].length; col++) {\r\n        const currentNode = {\r\n          col,\r\n          row,\r\n          isStart: false,\r\n          isFinish: false,\r\n        };\r\n        currentRow.push(currentNode);\r\n      }\r\n      nodes.push(currentRow);\r\n    }\r\n    this.setState({\r\n      grid: nodes\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let { grid } = this.state;\r\n\r\n    if(this.props.grid.length !== this.state.grid.length || this.props.grid[0].length !== this.state.grid[0].length){\r\n      this.componentDidMount()\r\n      return <div></div> //render will get called again after componentDidMount, so we just return something here in the mean time\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className = 'grid'>\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx}>\r\n                {row.map((node, nodeIdx) => {\r\n                  const { col, row, isStart, isFinish} = node;\r\n                  return (\r\n                    <Node \r\n                      key = {nodeIdx}\r\n                      col = {col}\r\n                      row = {row}\r\n                      isStart = {isStart}\r\n                      isFinish={isFinish}\r\n                      actualValue={this.props.grid[row][col]}\r\n                      inputValueChange={this.props.inputValueChange}\r\n                    ></Node>\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </>);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}