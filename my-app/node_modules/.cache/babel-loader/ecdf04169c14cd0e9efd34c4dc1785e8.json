{"ast":null,"code":"function Node(row, col) {\n  return document.getElementById(`node-${row}-${col}`);\n} // Gets a node from the screen\n\n\nexport default function visualizeBacktracking(moves) {\n  let currtime = 0;\n\n  for (let i = 0; i < 50; i++) {\n    setTimeout(() => {\n      Node(moves[i][0], moves[i][1]).value = moves[i][2];\n      Node(moves[i][0], moves[i][1]).className = 'node-finish';\n      currtime = currtime + 100;\n    }, 100 * i);\n  } // for (let i = 100; i < 1000; i++) {\n  //     setTimeout(() => {\n  //         Node(moves[i][0],moves[i][1]).value = moves[i][2]\n  //         Node(moves[i][0],moves[i][1]).className = 'node-finish'\n  //         currtime = currtime+10\n  //     }, 10*i+currtime)\n  // }\n  // for (let i = 1000; i < moves.length; i++) {\n  //     setTimeout(() => {\n  //         Node(moves[i][0],moves[i][1]).value = moves[i][2]\n  //         Node(moves[i][0],moves[i][1]).className = 'node-finish'\n  //         currtime = currtime + 1\n  //     }, currtime)\n  // }\n  // setTimeout(() => {\n  //     for (let row = 0; row < 9; row++){\n  //         for (let col = 0; col <9; col++){\n  //             Node(row,col).className = 'node-start'\n  //         }\n  //     }\n  // }, moves.length)\n\n}","map":{"version":3,"sources":["C:/Users/hp/Desktop/Sudoku/my-app/src/algorithms/visualizeBacktracking.js"],"names":["Node","row","col","document","getElementById","visualizeBacktracking","moves","currtime","i","setTimeout","value","className"],"mappings":"AAAA,SAASA,IAAT,CAAcC,GAAd,EAAmBC,GAAnB,EAAwB;AACpB,SAAOC,QAAQ,CAACC,cAAT,CAAyB,QAAOH,GAAI,IAAGC,GAAI,EAA3C,CAAP;AACH,C,CAAC;;;AAEF,eAAe,SAASG,qBAAT,CAA+BC,KAA/B,EAAsC;AACjD,MAAIC,QAAQ,GAAG,CAAf;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBC,IAAAA,UAAU,CAAC,MAAM;AACbT,MAAAA,IAAI,CAACM,KAAK,CAACE,CAAD,CAAL,CAAS,CAAT,CAAD,EAAaF,KAAK,CAACE,CAAD,CAAL,CAAS,CAAT,CAAb,CAAJ,CAA8BE,KAA9B,GAAsCJ,KAAK,CAACE,CAAD,CAAL,CAAS,CAAT,CAAtC;AACAR,MAAAA,IAAI,CAACM,KAAK,CAACE,CAAD,CAAL,CAAS,CAAT,CAAD,EAAaF,KAAK,CAACE,CAAD,CAAL,CAAS,CAAT,CAAb,CAAJ,CAA8BG,SAA9B,GAA0C,aAA1C;AACAJ,MAAAA,QAAQ,GAAGA,QAAQ,GAAG,GAAtB;AACH,KAJS,EAIP,MAAIC,CAJG,CAAV;AAKH,GARgD,CAUjD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH","sourcesContent":["function Node(row, col) {\r\n    return document.getElementById(`node-${row}-${col}`)\r\n} // Gets a node from the screen\r\n\r\nexport default function visualizeBacktracking(moves) {\r\n    let currtime = 0\r\n    for (let i = 0; i < 50; i++) {\r\n        setTimeout(() => {\r\n            Node(moves[i][0],moves[i][1]).value = moves[i][2]\r\n            Node(moves[i][0],moves[i][1]).className = 'node-finish'\r\n            currtime = currtime + 100\r\n        }, 100*i)\r\n    }\r\n\r\n    // for (let i = 100; i < 1000; i++) {\r\n    //     setTimeout(() => {\r\n    //         Node(moves[i][0],moves[i][1]).value = moves[i][2]\r\n    //         Node(moves[i][0],moves[i][1]).className = 'node-finish'\r\n    //         currtime = currtime+10\r\n    //     }, 10*i+currtime)\r\n    // }\r\n\r\n    // for (let i = 1000; i < moves.length; i++) {\r\n    //     setTimeout(() => {\r\n    //         Node(moves[i][0],moves[i][1]).value = moves[i][2]\r\n    //         Node(moves[i][0],moves[i][1]).className = 'node-finish'\r\n    //         currtime = currtime + 1\r\n    //     }, currtime)\r\n    // }\r\n\r\n    // setTimeout(() => {\r\n    //     for (let row = 0; row < 9; row++){\r\n    //         for (let col = 0; col <9; col++){\r\n    //             Node(row,col).className = 'node-start'\r\n    //         }\r\n    //     }\r\n    // }, moves.length)\r\n}"]},"metadata":{},"sourceType":"module"}