{"ast":null,"code":"function Node(row, col) {\n  return document.getElementById(`node-${row}-${col}`);\n} // Gets a node from the screen\n\n\n_c = Node;\nexport default function visualizeInitialAlg(moves, solvable) {\n  //Check if matrix is too small\n  if (!solvable) {\n    console.log(\"matrix too small\");\n    document.getElementById(\"Error\").innerHTML = \"Matrix has no inner tiles. Total Water = 0.\";\n    return;\n  } //reset className of <div id=\"end\"><div> if it's still highlighted fromprevious run\n\n\n  document.getElementById(\"end\").className = \"\"; //make initial border\n\n  let tempMoves = moves[0].currMoves;\n\n  for (let i = 0; i < tempMoves.length; i++) {\n    Node(tempMoves[i][0], tempMoves[i][1]).className = \"node-finish\";\n  } //color corners\n\n\n  tempMoves = moves[1].currMoves;\n\n  for (let i = 0; i < tempMoves.length; i++) {\n    Node(tempMoves[i][0], tempMoves[i][1]).className = \"node-visited\";\n  } //set About color\n\n\n  document.getElementById(\"step1\").className = \"currStep\"; //reset About color\n\n  setTimeout(() => {\n    document.getElementById(\"step1\").className = \"\";\n  }, 1500);\n  setTimeout(() => {\n    helper(moves.slice(2));\n  }, 1000); //show rest of moves\n\n  function helper(moves) {\n    setTimeout(() => {\n      if (moves.length < 1) {\n        document.getElementById(\"end\").className = \"currStep\";\n        return;\n      } //set About color\n\n\n      document.getElementById(`step${moves[0].currStep + 1}`).className = \"loopItem currStep\"; //reset About color\n\n      setTimeout(() => {\n        document.getElementById(`step${moves[0].currStep + 1}`).className = \"loopItem\";\n      }, 500); //update total and waterLevel on screen\n\n      document.getElementById(\"Error\").innerHTML = `Total Water: ${moves[0].total} \\n Water Level: ${moves[0].waterLevel}`;\n      let move;\n      console.log(move);\n\n      if (moves[0].currStep === 1) {\n        //highlight lowest border node\n        move = moves[0].currMoves[0];\n        Node(move[0], move[1]).className = \"node-start\"; //remove highlight after 1 step\n\n        setTimeout(() => {\n          Node(move[0], move[1]).className = \"node-finish\";\n        }, 1000);\n      } else if (moves[0].currStep === 2) {\n        //add new border node\n        move = moves[0].currMoves[0];\n        Node(move[0], move[1]).className = \"node-finish\";\n      } else if (moves[0].currStep === 3) {\n        for (let i = 0; i < moves[0].currMoves.length; i++) {\n          //remove border node\n          move = moves[0].currMoves[i];\n          Node(move[0], move[1]).className = \"node-visited\";\n        }\n      }\n\n      helper(moves.slice(1));\n    }, 500);\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Node\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/Trapping_Water/my-app/src/algorithms/visualizeInitialAlg.js"],"names":["Node","row","col","document","getElementById","visualizeInitialAlg","moves","solvable","console","log","innerHTML","className","tempMoves","currMoves","i","length","setTimeout","helper","slice","currStep","total","waterLevel","move"],"mappings":"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","sourcesContent":["function Node(row, col) {\r\n  return document.getElementById(`node-${row}-${col}`)\r\n} // Gets a node from the screen\r\n\r\nexport default function visualizeInitialAlg(moves, solvable) {\r\n  //Check if matrix is too small\r\n  if (!solvable) {\r\n    console.log(\"matrix too small\")\r\n    document.getElementById(\"Error\").innerHTML =\r\n      \"Matrix has no inner tiles. Total Water = 0.\"\r\n    return\r\n  }\r\n\r\n  //reset className of <div id=\"end\"><div> if it's still highlighted fromprevious run\r\n  document.getElementById(\"end\").className = \"\"\r\n\r\n  //make initial border\r\n  let tempMoves = moves[0].currMoves\r\n  for (let i = 0; i < tempMoves.length; i++) {\r\n    Node(tempMoves[i][0], tempMoves[i][1]).className = \"node-finish\"\r\n  }\r\n  //color corners\r\n  tempMoves = moves[1].currMoves\r\n  for (let i = 0; i < tempMoves.length; i++) {\r\n    Node(tempMoves[i][0], tempMoves[i][1]).className = \"node-visited\"\r\n  }\r\n\r\n  //set About color\r\n  document.getElementById(\"step1\").className = \"currStep\"\r\n  //reset About color\r\n  setTimeout(() => {\r\n    document.getElementById(\"step1\").className = \"\"\r\n  }, 1500)\r\n\r\n  setTimeout(() => {\r\n    helper(moves.slice(2))\r\n  }, 1000)\r\n\r\n  //show rest of moves\r\n  function helper(moves) {\r\n    setTimeout(() => {\r\n      if (moves.length < 1) {\r\n        document.getElementById(\"end\").className = \"currStep\"\r\n        return\r\n      }\r\n\r\n      //set About color\r\n      document.getElementById(`step${moves[0].currStep + 1}`).className =\r\n        \"loopItem currStep\"\r\n      //reset About color\r\n      setTimeout(() => {\r\n        document.getElementById(`step${moves[0].currStep + 1}`).className =\r\n          \"loopItem\"\r\n      }, 500)\r\n\r\n      //update total and waterLevel on screen\r\n      document.getElementById(\r\n        \"Error\"\r\n      ).innerHTML = `Total Water: ${moves[0].total} \\n Water Level: ${moves[0].waterLevel}`\r\n\r\n      let move\r\n      console.log(move)\r\n      if (moves[0].currStep === 1) {\r\n        //highlight lowest border node\r\n        move = moves[0].currMoves[0]\r\n        Node(move[0], move[1]).className = \"node-start\"\r\n        //remove highlight after 1 step\r\n        setTimeout(() => {\r\n          Node(move[0], move[1]).className = \"node-finish\"\r\n        }, 1000)\r\n      } else if (moves[0].currStep === 2) {\r\n        //add new border node\r\n        move = moves[0].currMoves[0]\r\n        Node(move[0], move[1]).className = \"node-finish\"\r\n      } else if (moves[0].currStep === 3) {\r\n        for (let i = 0; i < moves[0].currMoves.length; i++) {\r\n          //remove border node\r\n          move = moves[0].currMoves[i]\r\n          Node(move[0], move[1]).className = \"node-visited\"\r\n        }\r\n      }\r\n\r\n      helper(moves.slice(1))\r\n    }, 500)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}