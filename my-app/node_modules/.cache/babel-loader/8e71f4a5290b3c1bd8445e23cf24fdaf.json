{"ast":null,"code":"function Node(row, col) {\n  return document.getElementById(`node-${row}-${col}`);\n} // Gets a node from the screen\n//this function is bound to App\n//so that it can call the functions in App\n\n\n_c = Node;\nexport default function stepBackward() {\n  //copy funtions from app so they can be called within helper\n  let setCurrIndex = this.setCurrIndex;\n  let currIndex = this.state.currIndex;\n  let moves, solvable;\n\n  if (currIndex < 2) {\n    //no previous move so return\n    //no need to set moves or solvable since play or stepForward will do that in the first step\n    // console.log(\"no previous move\")\n    return;\n  } else if (currIndex === 2) {\n    //Only first step is done so undo first step\n    //make initial border\n    let tempMoves = moves[0].currMoves;\n\n    for (let i = 0; i < tempMoves.length; i++) {\n      Node(tempMoves[i][0], tempMoves[i][1]).className = \"node\";\n    } //color corners\n\n\n    tempMoves = moves[1].currMoves;\n\n    for (let i = 0; i < tempMoves.length; i++) {\n      Node(tempMoves[i][0], tempMoves[i][1]).className = \"node\";\n    } //set About color\n\n\n    document.getElementById(\"step1\").style.background = \"rgba(255, 0, 43, 0)\"; //we finished step 0, so currIndex = 2 now\n\n    currIndex = 0;\n    this.setState({\n      currIndex: currIndex\n    });\n  } else {//no more special cases, check the currStep\n    // helper()\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Node\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/Trapping_Water/my-app/src/stepBackward.js"],"names":["Node","row","col","document","getElementById","stepBackward","setCurrIndex","currIndex","state","moves","solvable","tempMoves","currMoves","i","length","className","style","background","setState"],"mappings":"AAAA,SAASA,IAAT,CAAcC,GAAd,EAAmBC,GAAnB,EAAwB;AACtB,SAAOC,QAAQ,CAACC,cAAT,CAAyB,QAAOH,GAAI,IAAGC,GAAI,EAA3C,CAAP;AACD,C,CAAC;AAEF;AACA;;;KALSF,I;AAOT,eAAe,SAASK,YAAT,GAAwB;AACrC;AACA,MAAIC,YAAY,GAAG,KAAKA,YAAxB;AACA,MAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWD,SAA3B;AACA,MAAIE,KAAJ,EAAWC,QAAX;;AAEA,MAAIH,SAAS,GAAG,CAAhB,EAAmB;AACjB;AACA;AACA;AACA;AACD,GALD,MAKO,IAAIA,SAAS,KAAK,CAAlB,EAAqB;AAC1B;AACA;AACA,QAAII,SAAS,GAAGF,KAAK,CAAC,CAAD,CAAL,CAASG,SAAzB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,SAAS,CAACG,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzCb,MAAAA,IAAI,CAACW,SAAS,CAACE,CAAD,CAAT,CAAa,CAAb,CAAD,EAAkBF,SAAS,CAACE,CAAD,CAAT,CAAa,CAAb,CAAlB,CAAJ,CAAuCE,SAAvC,GAAmD,MAAnD;AACD,KANyB,CAO1B;;;AACAJ,IAAAA,SAAS,GAAGF,KAAK,CAAC,CAAD,CAAL,CAASG,SAArB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,SAAS,CAACG,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzCb,MAAAA,IAAI,CAACW,SAAS,CAACE,CAAD,CAAT,CAAa,CAAb,CAAD,EAAkBF,SAAS,CAACE,CAAD,CAAT,CAAa,CAAb,CAAlB,CAAJ,CAAuCE,SAAvC,GAAmD,MAAnD;AACD,KAXyB,CAa1B;;;AACAZ,IAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCY,KAAjC,CAAuCC,UAAvC,GAAoD,qBAApD,CAd0B,CAgB1B;;AACAV,IAAAA,SAAS,GAAG,CAAZ;AACA,SAAKW,QAAL,CAAc;AAAEX,MAAAA,SAAS,EAAEA;AAAb,KAAd;AACD,GAnBM,MAmBA,CACL;AACA;AACD;AACF","sourcesContent":["function Node(row, col) {\r\n  return document.getElementById(`node-${row}-${col}`)\r\n} // Gets a node from the screen\r\n\r\n//this function is bound to App\r\n//so that it can call the functions in App\r\n\r\nexport default function stepBackward() {\r\n  //copy funtions from app so they can be called within helper\r\n  let setCurrIndex = this.setCurrIndex\r\n  let currIndex = this.state.currIndex\r\n  let moves, solvable\r\n\r\n  if (currIndex < 2) {\r\n    //no previous move so return\r\n    //no need to set moves or solvable since play or stepForward will do that in the first step\r\n    // console.log(\"no previous move\")\r\n    return\r\n  } else if (currIndex === 2) {\r\n    //Only first step is done so undo first step\r\n    //make initial border\r\n    let tempMoves = moves[0].currMoves\r\n    for (let i = 0; i < tempMoves.length; i++) {\r\n      Node(tempMoves[i][0], tempMoves[i][1]).className = \"node\"\r\n    }\r\n    //color corners\r\n    tempMoves = moves[1].currMoves\r\n    for (let i = 0; i < tempMoves.length; i++) {\r\n      Node(tempMoves[i][0], tempMoves[i][1]).className = \"node\"\r\n    }\r\n\r\n    //set About color\r\n    document.getElementById(\"step1\").style.background = \"rgba(255, 0, 43, 0)\"\r\n\r\n    //we finished step 0, so currIndex = 2 now\r\n    currIndex = 0\r\n    this.setState({ currIndex: currIndex })\r\n  } else {\r\n    //no more special cases, check the currStep\r\n    // helper()\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}