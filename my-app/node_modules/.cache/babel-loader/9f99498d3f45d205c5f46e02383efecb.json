{"ast":null,"code":"import _classCallCheck from\"C:/Users/hp/Desktop/Trapping-Rain-Water-II/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/hp/Desktop/Trapping-Rain-Water-II/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:/Users/hp/Desktop/Trapping-Rain-Water-II/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:/Users/hp/Desktop/Trapping-Rain-Water-II/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/hp/Desktop/Trapping-Rain-Water-II/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import\"./App.css\";import PathfindingVisualizer from\"./PathfindingVisualizer/PathfindingVisualizer\";import Menu from\"./Menu\";import _loadRGrid from\"./grids/loadRGrid.js\";import About from\"./About\";import visualizeAlgorithm from\"./visualizeAlgorithm\";import Error from\"./Error\";import visualizeInitialAlg from\"./algorithms/visualizeInitialAlg\";import stepForward from\"./stepForward.js\";import stepBackward from\"./stepBackward.js\";import resetColors from\"./resetColors.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={grid:[],tempGrid:\"\",gridHeight:9,gridWidth:9,selectedAlg:1,mode:\"pause\",//mode of playPause button\ncurrIndex:0,//how far we are though the moves array in visualizeInitialAlg\nmoves:[]//the set of moves from initialAlg\n};_this.visualizeAlgorithm=visualizeAlgorithm.bind(_assertThisInitialized(_this));_this.inputValueChange=_this.inputValueChange.bind(_assertThisInitialized(_this));_this.changeNodeVal=_this.changeNodeVal.bind(_assertThisInitialized(_this));_this.setGridHeight=_this.setGridHeight.bind(_assertThisInitialized(_this));_this.setGridWidth=_this.setGridWidth.bind(_assertThisInitialized(_this));_this.setGrid=_this.setGrid.bind(_assertThisInitialized(_this));_this.getMode=_this.getMode.bind(_assertThisInitialized(_this));_this.visualizeInitialAlg=visualizeInitialAlg.bind(_assertThisInitialized(_this));_this.setCurrIndex=_this.setCurrIndex.bind(_assertThisInitialized(_this));_this.stepForward=stepForward.bind(_assertThisInitialized(_this));_this.stepBackward=stepBackward.bind(_assertThisInitialized(_this));_this.setMode=_this.setMode.bind(_assertThisInitialized(_this));_this.resetGrid=_this.resetGrid.bind(_assertThisInitialized(_this));return _this;}// stepForward() {\n//   //turn mode to play, then turn it back after 1 millisecond so that visualizeAlgorithm goes through 1 iteration.\n//   this.setState({ mode: \"play\" })\n//   this.visualizeAlgorithm()\n//   document.getElementById(\"playPause\").innerHTML = \"Play\" //This overrides visualizeAlgorithm turning the playPause button to \"Pause\"\n//   setTimeout(() => {\n//     this.setState({ mode: \"pause\" })\n//   }, 1)\n// }\n_createClass(App,[{key:\"resetGrid\",value:function resetGrid(){var _this2=this;resetColors(this.state.grid.length,this.state.grid[0].length);this.setState({mode:\"pause\"});//It'll take a hot second to pause visualizeInitialAlg because of the setTimeout in the recursive call, so we need to wait before we update currIndex\nsetTimeout(function(){_this2.setState({currIndex:0});},301);document.getElementById(\"playPause\").innerHTML=\"Play\";}},{key:\"setCurrIndex\",value:function setCurrIndex(value){this.setState({currIndex:value});}},{key:\"setMode\",value:function setMode(value){this.setState({mode:value});}},{key:\"getMode\",value:function getMode(){return this.state.mode;}},{key:\"changeNodeVal\",value:function changeNodeVal(row,col,value){var newGrid=this.state.grid.slice();newGrid[row][col]=value;this.setState({grid:newGrid});}},{key:\"setGridHeight\",value:function setGridHeight(event){this.setState({gridHeight:event.target.value});// console.log(\"gridHeight\", this.state.gridHeight)\n}},{key:\"setGridWidth\",value:function setGridWidth(event){this.setState({gridWidth:event.target.value});// console.log(\"gridWidth\", this.state.gridWidth)\n}},{key:\"setGrid\",value:function setGrid(type){var nodes=[];//setGrid being called from entering dimensions\nif(type===\"dimensionInput\"){for(var i=0;i<this.state.gridHeight;i++){var row=[];for(var j=0;j<this.state.gridWidth;j++){row.push(0);}nodes.push(row);}this.setState({grid:nodes,moves:[],currIndex:0});}else{//setGrid being called from entering array\nthis.setState({grid:JSON.parse(this.state.tempGrid),moves:[],currIndex:0});}//reset colors on all the nodes\nresetColors(this.state.grid.length,this.state.grid[0].length);}},{key:\"inputValueChange\",value:function inputValueChange(row,col,event){var value=event.target.value;var numVal=Number(value);if(numVal>=0&&numVal<=9){var newGrid=this.state.grid.slice();newGrid[row][col]=numVal;this.setState({grid:newGrid});}}},{key:\"componentDidMount\",value:function componentDidMount(){var nodes=[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]];this.setState({grid:nodes});}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"Header\",children:\"Algorithm Visualizer\"}),/*#__PURE__*/_jsx(Menu,{gridHeight:this.state.gridHeight,gridWidth:this.state.gridWidth,tempGrid:this.state.tempGrid,handleClick:function handleClick(){return _this3.visualizeAlgorithm(_this3.changeNodeVal);},stepForward:this.stepForward,stepBackward:this.stepBackward,setGridHeight:function setGridHeight(x){return _this3.setState({gridHeight:x});},setGridWidth:function setGridWidth(x){return _this3.setState({gridWidth:x});},setTempGrid:function setTempGrid(x){return _this3.setState({tempGrid:x});},setGrid:this.setGrid,resetGrid:this.resetGrid,loadRGrid:function loadRGrid(){_this3.setState({grid:_loadRGrid(_this3.state.grid),moves:[],currIndex:0},_this3.setState({tempGrid:JSON.stringify(_this3.state.grid)}));}}),/*#__PURE__*/_jsxs(\"div\",{className:\"flexbox\",children:[/*#__PURE__*/_jsx(About,{selectedAlg:this.state.selectedAlg}),/*#__PURE__*/_jsx(PathfindingVisualizer,{inputValueChange:this.inputValueChange,grid:this.state.grid}),/*#__PURE__*/_jsx(Error,{selectedAlg:this.state.selectedAlg})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"p.s. I love you :heart:\"})]});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["C:/Users/hp/Desktop/Trapping-Rain-Water-II/my-app/src/App.js"],"names":["React","PathfindingVisualizer","Menu","loadRGrid","About","visualizeAlgorithm","Error","visualizeInitialAlg","stepForward","stepBackward","resetColors","App","props","state","grid","tempGrid","gridHeight","gridWidth","selectedAlg","mode","currIndex","moves","bind","inputValueChange","changeNodeVal","setGridHeight","setGridWidth","setGrid","getMode","setCurrIndex","setMode","resetGrid","length","setState","setTimeout","document","getElementById","innerHTML","value","row","col","newGrid","slice","event","target","type","nodes","i","j","push","JSON","parse","numVal","Number","x","stringify","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport \"./App.css\"\nimport PathfindingVisualizer from \"./PathfindingVisualizer/PathfindingVisualizer\"\nimport Menu from \"./Menu\"\nimport loadRGrid from \"./grids/loadRGrid.js\"\nimport About from \"./About\"\nimport visualizeAlgorithm from \"./visualizeAlgorithm\"\nimport Error from \"./Error\"\nimport visualizeInitialAlg from \"./algorithms/visualizeInitialAlg\"\nimport stepForward from \"./stepForward.js\"\nimport stepBackward from \"./stepBackward.js\"\nimport resetColors from \"./resetColors.js\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      grid: [],\n      tempGrid: \"\",\n      gridHeight: 9,\n      gridWidth: 9,\n      selectedAlg: 1,\n      mode: \"pause\", //mode of playPause button\n      currIndex: 0, //how far we are though the moves array in visualizeInitialAlg\n      moves: [], //the set of moves from initialAlg\n    }\n    this.visualizeAlgorithm = visualizeAlgorithm.bind(this)\n    this.inputValueChange = this.inputValueChange.bind(this)\n    this.changeNodeVal = this.changeNodeVal.bind(this)\n    this.setGridHeight = this.setGridHeight.bind(this)\n    this.setGridWidth = this.setGridWidth.bind(this)\n    this.setGrid = this.setGrid.bind(this)\n    this.getMode = this.getMode.bind(this)\n    this.visualizeInitialAlg = visualizeInitialAlg.bind(this)\n    this.setCurrIndex = this.setCurrIndex.bind(this)\n    this.stepForward = stepForward.bind(this)\n    this.stepBackward = stepBackward.bind(this)\n    this.setMode = this.setMode.bind(this)\n    this.resetGrid = this.resetGrid.bind(this)\n  }\n\n  // stepForward() {\n  //   //turn mode to play, then turn it back after 1 millisecond so that visualizeAlgorithm goes through 1 iteration.\n  //   this.setState({ mode: \"play\" })\n  //   this.visualizeAlgorithm()\n  //   document.getElementById(\"playPause\").innerHTML = \"Play\" //This overrides visualizeAlgorithm turning the playPause button to \"Pause\"\n  //   setTimeout(() => {\n  //     this.setState({ mode: \"pause\" })\n  //   }, 1)\n  // }\n\n  resetGrid() {\n    resetColors(this.state.grid.length, this.state.grid[0].length)\n    this.setState({ mode: \"pause\" })\n    //It'll take a hot second to pause visualizeInitialAlg because of the setTimeout in the recursive call, so we need to wait before we update currIndex\n    setTimeout(() => {\n      this.setState({ currIndex: 0 })\n    }, 301)\n    document.getElementById(\"playPause\").innerHTML = \"Play\"\n  }\n\n  setCurrIndex(value) {\n    this.setState({ currIndex: value })\n  }\n\n  setMode(value) {\n    this.setState({ mode: value })\n  }\n\n  getMode() {\n    return this.state.mode\n  }\n\n  changeNodeVal(row, col, value) {\n    let newGrid = this.state.grid.slice()\n    newGrid[row][col] = value\n    this.setState({\n      grid: newGrid,\n    })\n  }\n\n  setGridHeight(event) {\n    this.setState({\n      gridHeight: event.target.value,\n    })\n    // console.log(\"gridHeight\", this.state.gridHeight)\n  }\n\n  setGridWidth(event) {\n    this.setState({\n      gridWidth: event.target.value,\n    })\n    // console.log(\"gridWidth\", this.state.gridWidth)\n  }\n\n  setGrid(type) {\n    let nodes = []\n\n    //setGrid being called from entering dimensions\n    if (type === \"dimensionInput\") {\n      for (let i = 0; i < this.state.gridHeight; i++) {\n        let row = []\n        for (let j = 0; j < this.state.gridWidth; j++) {\n          row.push(0)\n        }\n        nodes.push(row)\n      }\n      this.setState({\n        grid: nodes,\n        moves: [],\n        currIndex: 0,\n      })\n    } else {\n      //setGrid being called from entering array\n      this.setState({\n        grid: JSON.parse(this.state.tempGrid),\n        moves: [],\n        currIndex: 0,\n      })\n    }\n\n    //reset colors on all the nodes\n    resetColors(this.state.grid.length, this.state.grid[0].length)\n  }\n\n  inputValueChange(row, col, event) {\n    let value = event.target.value\n    let numVal = Number(value)\n\n    if (numVal >= 0 && numVal <= 9) {\n      let newGrid = this.state.grid.slice()\n      newGrid[row][col] = numVal\n      this.setState({\n        grid: newGrid,\n      })\n    }\n  }\n\n  componentDidMount() {\n    const nodes = [\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    ]\n    this.setState({\n      grid: nodes,\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"Header\">Algorithm Visualizer</h1>\n        <Menu\n          gridHeight={this.state.gridHeight}\n          gridWidth={this.state.gridWidth}\n          tempGrid={this.state.tempGrid}\n          handleClick={() => this.visualizeAlgorithm(this.changeNodeVal)}\n          stepForward={this.stepForward}\n          stepBackward={this.stepBackward}\n          setGridHeight={(x) => this.setState({ gridHeight: x })}\n          setGridWidth={(x) => this.setState({ gridWidth: x })}\n          setTempGrid={(x) => this.setState({ tempGrid: x })}\n          setGrid={this.setGrid}\n          resetGrid={this.resetGrid}\n          loadRGrid={() => {\n            this.setState(\n              { grid: loadRGrid(this.state.grid), moves: [], currIndex: 0 },\n              this.setState({ tempGrid: JSON.stringify(this.state.grid) })\n            )\n          }}\n        ></Menu>\n        <div className=\"flexbox\">\n          <About selectedAlg={this.state.selectedAlg}></About>\n          <PathfindingVisualizer\n            inputValueChange={this.inputValueChange}\n            grid={this.state.grid}\n          ></PathfindingVisualizer>\n          <Error selectedAlg={this.state.selectedAlg}></Error>\n        </div>\n        <h3>p.s. I love you :heart:</h3>\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}