{"ast":null,"code":"function Node(row, col) {\n  return document.getElementById(`node-${row}-${col}`);\n} // Gets a node from the screen\n\n\nexport default function visualizeBacktracking(movesList) {\n  let moves = [0, 0, 0];\n  moves.push(movesList);\n  console.log(moves[0]);\n\n  for (let i = 0; i < moves.length; i++) {\n    // row = moves[i][0]\n    // col = moves[i][1]\n    // value = moves[i][2]\n    // setTimeout(() => {\n    //     Node(moves[i][0],moves[i][1]).className = 'node-start'\n    // }, 5000*Math.pow(Math.log(i+1),0.5)-2000)\n    // setTimeout(() => {\n    //     Node(moves[i][0],moves[i][1]).value = moves[i][2]\n    //     Node(moves[i][0],moves[i][1]).className = 'node-finish'\n    // }, 5000*Math.pow(Math.log(i+2),0.5)-2000)\n    setTimeout(() => {\n      Node(moves[i][0], moves[i][1]).className = 'node-start'; //color node about to be changed\n    }, 5000 * Math.pow(i, 0.25) - 1000);\n    setTimeout(() => {\n      Node(moves[i][0], moves[i][1]).value = moves[i][2];\n      Node(moves[i][0], moves[i][1]).className = 'node-finish'; //color visited nodes\n    }, 5000 * Math.pow(i + 1, 0.25) - 1000);\n  } // setTimeout(() => {\n  //     for (let row = 0; row < 9; row++){\n  //         for (let col = 0; col <9; col++){\n  //             Node(row,col).className = 'node-start'\n  //         }\n  //     }\n  // }, moves.length)\n\n}","map":{"version":3,"sources":["C:/Users/hp/Desktop/Sudoku/my-app/src/algorithms/visualizeBacktracking.js"],"names":["Node","row","col","document","getElementById","visualizeBacktracking","movesList","moves","push","console","log","i","length","setTimeout","className","Math","pow","value"],"mappings":"AAAA,SAASA,IAAT,CAAcC,GAAd,EAAmBC,GAAnB,EAAwB;AACpB,SAAOC,QAAQ,CAACC,cAAT,CAAyB,QAAOH,GAAI,IAAGC,GAAI,EAA3C,CAAP;AACH,C,CAAC;;;AAEF,eAAe,SAASG,qBAAT,CAA+BC,SAA/B,EAA0C;AACrD,MAAIC,KAAK,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAZ;AACAA,EAAAA,KAAK,CAACC,IAAN,CAAWF,SAAX;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAAC,CAAD,CAAjB;;AAEA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACK,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAE,IAAAA,UAAU,CAAC,MAAM;AACbb,MAAAA,IAAI,CAACO,KAAK,CAACI,CAAD,CAAL,CAAS,CAAT,CAAD,EAAaJ,KAAK,CAACI,CAAD,CAAL,CAAS,CAAT,CAAb,CAAJ,CAA8BG,SAA9B,GAA0C,YAA1C,CADa,CAC0C;AAC1D,KAFS,EAEP,OAAKC,IAAI,CAACC,GAAL,CAASL,CAAT,EAAW,IAAX,CAAL,GAAsB,IAFf,CAAV;AAGAE,IAAAA,UAAU,CAAC,MAAM;AACbb,MAAAA,IAAI,CAACO,KAAK,CAACI,CAAD,CAAL,CAAS,CAAT,CAAD,EAAaJ,KAAK,CAACI,CAAD,CAAL,CAAS,CAAT,CAAb,CAAJ,CAA8BM,KAA9B,GAAsCV,KAAK,CAACI,CAAD,CAAL,CAAS,CAAT,CAAtC;AACAX,MAAAA,IAAI,CAACO,KAAK,CAACI,CAAD,CAAL,CAAS,CAAT,CAAD,EAAaJ,KAAK,CAACI,CAAD,CAAL,CAAS,CAAT,CAAb,CAAJ,CAA8BG,SAA9B,GAA0C,aAA1C,CAFa,CAE2C;AAE3D,KAJS,EAIP,OAAKC,IAAI,CAACC,GAAL,CAASL,CAAC,GAAC,CAAX,EAAa,IAAb,CAAL,GAAwB,IAJjB,CAAV;AAKH,GAzBoD,CA2BrD;AACA;AACA;AACA;AACA;AACA;AACA;;AACH","sourcesContent":["function Node(row, col) {\r\n    return document.getElementById(`node-${row}-${col}`)\r\n} // Gets a node from the screen\r\n\r\nexport default function visualizeBacktracking(movesList) {\r\n    let moves = [0,0,0]\r\n    moves.push(movesList)\r\n    console.log(moves[0])\r\n    \r\n    for (let i = 0; i < moves.length; i++) {\r\n        // row = moves[i][0]\r\n        // col = moves[i][1]\r\n        // value = moves[i][2]\r\n        // setTimeout(() => {\r\n        //     Node(moves[i][0],moves[i][1]).className = 'node-start'\r\n        // }, 5000*Math.pow(Math.log(i+1),0.5)-2000)\r\n        // setTimeout(() => {\r\n        //     Node(moves[i][0],moves[i][1]).value = moves[i][2]\r\n        //     Node(moves[i][0],moves[i][1]).className = 'node-finish'\r\n        // }, 5000*Math.pow(Math.log(i+2),0.5)-2000)\r\n    \r\n        setTimeout(() => {\r\n            Node(moves[i][0],moves[i][1]).className = 'node-start' //color node about to be changed\r\n        }, 5000*Math.pow(i,0.25)-1000)\r\n        setTimeout(() => {\r\n            Node(moves[i][0],moves[i][1]).value = moves[i][2]\r\n            Node(moves[i][0],moves[i][1]).className = 'node-finish' //color visited nodes\r\n            \r\n        }, 5000*Math.pow(i+1,0.25)-1000)\r\n    }\r\n\r\n    // setTimeout(() => {\r\n    //     for (let row = 0; row < 9; row++){\r\n    //         for (let col = 0; col <9; col++){\r\n    //             Node(row,col).className = 'node-start'\r\n    //         }\r\n    //     }\r\n    // }, moves.length)\r\n}"]},"metadata":{},"sourceType":"module"}