{"ast":null,"code":"import initialAlg from \"./algorithms/initialAlg\";\nimport visualizeStepBack from \"./algorithms/visualizeStepBack\"; //This function is bound to App.js so that App may\n//call any algorithm and visualize it\n\nexport default function visualizeAlgorithm(changeNodeVal) {\n  switch (this.state.selectedAlg) {\n    case 0:\n      console.log(\"No algorithm selected!\");\n      break;\n\n    case 1:\n      if (this.state.mode === \"play\") {\n        //currently in play mode, let's pause it. This will end the current instance of visualize InitialAlg\n        this.setState({\n          mode: \"pause\"\n        });\n        document.getElementById(\"playPause\").innerHTML = \"Play\";\n        break;\n      }\n\n      if (this.state.mode = \"stepForward\") {\n        document.getElementById(\"playPause\").innerHTML = \"Pause\";\n        this.setState({\n          mode: \"play\"\n        });\n        setTimeout(() => {\n          let temp = initialAlg(this.state.grid);\n          this.visualizeInitialAlg(temp.moves, temp.solvable);\n        }, 1);\n        break;\n      }\n\n    default:\n      console.log(\"You selected an algorithm!\");\n      break;\n  }\n}","map":{"version":3,"sources":["C:/Users/hp/Desktop/Trapping_Water/my-app/src/visualizeAlgorithm.js"],"names":["initialAlg","visualizeStepBack","visualizeAlgorithm","changeNodeVal","state","selectedAlg","console","log","mode","setState","document","getElementById","innerHTML","setTimeout","temp","grid","visualizeInitialAlg","moves","solvable"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,yBAAvB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B,C,CAEA;AACA;;AAEA,eAAe,SAASC,kBAAT,CAA4BC,aAA5B,EAA2C;AACxD,UAAQ,KAAKC,KAAL,CAAWC,WAAnB;AACE,SAAK,CAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA;;AAEF,SAAK,CAAL;AACE,UAAI,KAAKH,KAAL,CAAWI,IAAX,KAAoB,MAAxB,EAAgC;AAC9B;AACA,aAAKC,QAAL,CAAc;AAAED,UAAAA,IAAI,EAAE;AAAR,SAAd;AACAE,QAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,SAArC,GAAiD,MAAjD;AACA;AACD;;AACD,UAAK,KAAKR,KAAL,CAAWI,IAAX,GAAkB,aAAvB,EAAuC;AACrCE,QAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,SAArC,GAAiD,OAAjD;AACA,aAAKH,QAAL,CAAc;AAAED,UAAAA,IAAI,EAAE;AAAR,SAAd;AACAK,QAAAA,UAAU,CAAC,MAAM;AACf,cAAIC,IAAI,GAAGd,UAAU,CAAC,KAAKI,KAAL,CAAWW,IAAZ,CAArB;AACA,eAAKC,mBAAL,CAAyBF,IAAI,CAACG,KAA9B,EAAqCH,IAAI,CAACI,QAA1C;AACD,SAHS,EAGP,CAHO,CAAV;AAIA;AACD;;AAEH;AACEZ,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA;AAxBJ;AA0BD","sourcesContent":["import initialAlg from \"./algorithms/initialAlg\"\r\nimport visualizeStepBack from \"./algorithms/visualizeStepBack\"\r\n\r\n//This function is bound to App.js so that App may\r\n//call any algorithm and visualize it\r\n\r\nexport default function visualizeAlgorithm(changeNodeVal) {\r\n  switch (this.state.selectedAlg) {\r\n    case 0:\r\n      console.log(\"No algorithm selected!\")\r\n      break\r\n\r\n    case 1:\r\n      if (this.state.mode === \"play\") {\r\n        //currently in play mode, let's pause it. This will end the current instance of visualize InitialAlg\r\n        this.setState({ mode: \"pause\" })\r\n        document.getElementById(\"playPause\").innerHTML = \"Play\"\r\n        break\r\n      }\r\n      if ((this.state.mode = \"stepForward\")) {\r\n        document.getElementById(\"playPause\").innerHTML = \"Pause\"\r\n        this.setState({ mode: \"play\" })\r\n        setTimeout(() => {\r\n          let temp = initialAlg(this.state.grid)\r\n          this.visualizeInitialAlg(temp.moves, temp.solvable)\r\n        }, 1)\r\n        break\r\n      }\r\n\r\n    default:\r\n      console.log(\"You selected an algorithm!\")\r\n      break\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}