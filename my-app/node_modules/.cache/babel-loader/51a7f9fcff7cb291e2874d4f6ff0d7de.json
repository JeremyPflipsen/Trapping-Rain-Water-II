{"ast":null,"code":"import initalAlg from \"./algorithms/initialAlg\"; //This function is bound to App.js so that App may\n//call any algorithm and visualize it\n\nexport default function visualizeAlgorithm(changeNodeVal) {\n  let moves = [];\n\n  switch (this.state.selectedAlg) {\n    case 0:\n      console.log(\"No algorithm selected!\");\n      break;\n\n    case 1:\n      let temp = backtracking(this.state.grid);\n      moves = temp.moves;\n      visualizeBacktracking(moves, temp.solvable);\n      break;\n\n    case 2:\n      moves = hillClimbing(this.state.grid);\n      setTimeout(visualizeSimulatedAnnealing(moves, changeNodeVal), 1000);\n      break;\n\n    case 3:\n      moves = simulatedAnnealing(this.state.grid);\n      setTimeout(visualizeSimulatedAnnealing(moves, changeNodeVal), 1000);\n      break;\n\n    case 4:\n      moves = geneticAlgorithm(this.state.grid);\n      visualizeGeneticAlgorithm(moves);\n      break;\n\n    default:\n      console.log(\"You selected an algorithm!\");\n      break;\n  }\n}","map":{"version":3,"sources":["C:/Users/hp/Desktop/Trapping_Water/my-app/src/visualizeAlgorithm.js"],"names":["initalAlg","visualizeAlgorithm","changeNodeVal","moves","state","selectedAlg","console","log","temp","backtracking","grid","visualizeBacktracking","solvable","hillClimbing","setTimeout","visualizeSimulatedAnnealing","simulatedAnnealing","geneticAlgorithm","visualizeGeneticAlgorithm"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,yBAAtB,C,CAEA;AACA;;AAEA,eAAe,SAASC,kBAAT,CAA4BC,aAA5B,EAA2C;AACxD,MAAIC,KAAK,GAAG,EAAZ;;AACA,UAAQ,KAAKC,KAAL,CAAWC,WAAnB;AACE,SAAK,CAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA;;AAEF,SAAK,CAAL;AACE,UAAIC,IAAI,GAAGC,YAAY,CAAC,KAAKL,KAAL,CAAWM,IAAZ,CAAvB;AACAP,MAAAA,KAAK,GAAGK,IAAI,CAACL,KAAb;AACAQ,MAAAA,qBAAqB,CAACR,KAAD,EAAQK,IAAI,CAACI,QAAb,CAArB;AACA;;AAEF,SAAK,CAAL;AACET,MAAAA,KAAK,GAAGU,YAAY,CAAC,KAAKT,KAAL,CAAWM,IAAZ,CAApB;AACAI,MAAAA,UAAU,CAACC,2BAA2B,CAACZ,KAAD,EAAQD,aAAR,CAA5B,EAAoD,IAApD,CAAV;AACA;;AAEF,SAAK,CAAL;AACEC,MAAAA,KAAK,GAAGa,kBAAkB,CAAC,KAAKZ,KAAL,CAAWM,IAAZ,CAA1B;AACAI,MAAAA,UAAU,CAACC,2BAA2B,CAACZ,KAAD,EAAQD,aAAR,CAA5B,EAAoD,IAApD,CAAV;AACA;;AAEF,SAAK,CAAL;AACEC,MAAAA,KAAK,GAAGc,gBAAgB,CAAC,KAAKb,KAAL,CAAWM,IAAZ,CAAxB;AACAQ,MAAAA,yBAAyB,CAACf,KAAD,CAAzB;AACA;;AAEF;AACEG,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA;AA5BJ;AA8BD","sourcesContent":["import initalAlg from \"./algorithms/initialAlg\"\r\n\r\n//This function is bound to App.js so that App may\r\n//call any algorithm and visualize it\r\n\r\nexport default function visualizeAlgorithm(changeNodeVal) {\r\n  let moves = []\r\n  switch (this.state.selectedAlg) {\r\n    case 0:\r\n      console.log(\"No algorithm selected!\")\r\n      break\r\n\r\n    case 1:\r\n      let temp = backtracking(this.state.grid)\r\n      moves = temp.moves\r\n      visualizeBacktracking(moves, temp.solvable)\r\n      break\r\n\r\n    case 2:\r\n      moves = hillClimbing(this.state.grid)\r\n      setTimeout(visualizeSimulatedAnnealing(moves, changeNodeVal), 1000)\r\n      break\r\n\r\n    case 3:\r\n      moves = simulatedAnnealing(this.state.grid)\r\n      setTimeout(visualizeSimulatedAnnealing(moves, changeNodeVal), 1000)\r\n      break\r\n\r\n    case 4:\r\n      moves = geneticAlgorithm(this.state.grid)\r\n      visualizeGeneticAlgorithm(moves)\r\n      break\r\n\r\n    default:\r\n      console.log(\"You selected an algorithm!\")\r\n      break\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}