{"ast":null,"code":"function Node(row, col) {\n  return document.getElementById(`node-${row}-${col}`);\n} // Gets a node from the screen\n\n\nfunction NodeVal(row, col) {\n  return Number(Node(row, col).value);\n}\n\nfunction showErrors() {\n  let seen = []; //check the rows\n\n  for (let row = 0; row < 9; row++) {\n    for (let col = 0; col < 9; col++) {\n      if (seen.includes(NodeVal(row, col))) {\n        Node(row, col).className = 'node-finish';\n      } else {\n        seen.push(seen[row][col]);\n      }\n    }\n\n    seen = [];\n  } //check the columns\n\n\n  for (let col = 0; col < 9; col++) {\n    for (let row = 0; row < 9; row++) {\n      if (seen.includes(NodeVal[row][col])) {\n        Node(row, col).className = 'node-finish';\n      } else {\n        seen.push(seen[row][col]);\n      }\n    }\n\n    seen = [];\n  }\n}\n\nexport default function visualizeSimulatedAnnealing(moves) {\n  for (let i = 0; i < moves.length; i = i + 2) {\n    // row = moves[i][0]\n    // col = moves[i][1]\n    // value = moves[i][2]\n    // setTimeout(() => {\n    //     Node(moves[i][0],moves[i][1]).className = 'node-start'\n    // }, 5000*Math.pow(Math.log(i+1),0.5)-2000)\n    // setTimeout(() => {\n    //     Node(moves[i][0],moves[i][1]).value = moves[i][2]\n    //     Node(moves[i][0],moves[i][1]).className = 'node-finish'\n    // }, 5000*Math.pow(Math.log(i+2),0.5)-2000)\n    setTimeout(() => {\n      Node(moves[i][0], moves[i][1]).className = 'node-start'; //color node about to be changed\n\n      Node(moves[i + 1][0], moves[i + 1][1]).className = 'node-start';\n    }, 5000 * Math.pow(Math.log(i), 1) + 10000);\n    setTimeout(() => {\n      Node(moves[i][0], moves[i][1]).value = moves[i][2];\n      Node(moves[i + 1][0], moves[i + 1][1]).value = moves[i + 1][2];\n      Node(moves[i][0], moves[i][1]).className = 'node'; //color node about to be changed\n\n      Node(moves[i + 1][0], moves[i + 1][1]).className = 'node';\n    }, 5000 * Math.pow(Math.log(i + 2), 1) + 10000);\n  }\n\n  showErrors();\n}","map":{"version":3,"sources":["C:/Users/hp/Desktop/Sudoku/my-app/src/algorithms/visualizeSimulatedAnnealing.js"],"names":["Node","row","col","document","getElementById","NodeVal","Number","value","showErrors","seen","includes","className","push","visualizeSimulatedAnnealing","moves","i","length","setTimeout","Math","pow","log"],"mappings":"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","sourcesContent":["function Node(row, col) {\r\n    return document.getElementById(`node-${row}-${col}`)\r\n} // Gets a node from the screen\r\n\r\nfunction NodeVal(row,col) {\r\n    return Number(Node(row,col).value)\r\n}\r\n\r\nfunction showErrors() {\r\n    let seen = []\r\n\r\n    //check the rows\r\n    for (let row = 0; row < 9; row ++) {\r\n        for (let col = 0; col < 9; col ++) {\r\n            if (seen.includes(NodeVal(row,col))) {\r\n                Node(row,col).className = 'node-finish'\r\n            }\r\n            else {\r\n                seen.push(seen[row][col])\r\n            }\r\n        }\r\n        seen = []\r\n    }\r\n    //check the columns\r\n    for (let col = 0; col < 9; col ++) {\r\n        for (let row = 0; row < 9; row ++) {\r\n            if (seen.includes(NodeVal[row][col])) {\r\n                Node(row,col).className = 'node-finish'\r\n            }\r\n            else {\r\n                seen.push(seen[row][col])\r\n            }\r\n        }\r\n        seen = []\r\n    }\r\n}\r\n\r\nexport default function visualizeSimulatedAnnealing(moves) {\r\n    for (let i = 0; i < moves.length; i = i+2) {\r\n        // row = moves[i][0]\r\n        // col = moves[i][1]\r\n        // value = moves[i][2]\r\n        // setTimeout(() => {\r\n        //     Node(moves[i][0],moves[i][1]).className = 'node-start'\r\n        // }, 5000*Math.pow(Math.log(i+1),0.5)-2000)\r\n        // setTimeout(() => {\r\n        //     Node(moves[i][0],moves[i][1]).value = moves[i][2]\r\n        //     Node(moves[i][0],moves[i][1]).className = 'node-finish'\r\n        // }, 5000*Math.pow(Math.log(i+2),0.5)-2000)\r\n    \r\n        setTimeout(() => {\r\n            Node(moves[i][0],moves[i][1]).className = 'node-start' //color node about to be changed\r\n            Node(moves[i+1][0],moves[i+1][1]).className = 'node-start'\r\n        }, 5000*Math.pow(Math.log(i),1)+10000)\r\n        setTimeout(() => {\r\n            Node(moves[i][0],moves[i][1]).value = moves[i][2]\r\n            Node(moves[i+1][0],moves[i+1][1]).value = moves[i+1][2]\r\n            Node(moves[i][0],moves[i][1]).className = 'node' //color node about to be changed\r\n            Node(moves[i+1][0],moves[i+1][1]).className = 'node'\r\n            \r\n        }, 5000*Math.pow(Math.log(i+2),1)+10000)\r\n    }\r\n\r\n    showErrors()\r\n}"]},"metadata":{},"sourceType":"module"}