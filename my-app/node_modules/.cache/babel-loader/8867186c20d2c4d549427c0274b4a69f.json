{"ast":null,"code":"import backtracking from './algorithms/backtracking';\nimport visualizeBacktracking from './algorithms/visualizeBacktracking.js';\nimport simulatedAnnealing from \"./algorithms/simulatedAnnealing\";\nimport visualizeSimulatedAnnealing from \"./algorithms/visualizeSimulatedAnnealing\";\nimport hillClimbing from \"./algorithms/hillClimbing\"; //This function is bound to App.js so that App may\n//call any algorithm and visualize it\n\nexport default function visualizeAlgorithm() {\n  let moves = [];\n\n  switch (this.state.selectedAlg) {\n    case 0:\n      console.log(\"No algorithm selected!\");\n      break;\n\n    case 1:\n      moves = backtracking(this.state.grid);\n      visualizeBacktracking(moves);\n      break;\n\n    case 2:\n      moves = hillClimbing(this.state.grid);\n      setTimeout(visualizeSimulatedAnnealing(moves), 1000);\n      break;\n\n    case 3:\n      moves = simulatedAnnealing(this.state.grid);\n      setTimeout(visualizeSimulatedAnnealing(moves), 1000);\n      break;\n\n    default:\n      console.log(\"You selected an algorithm!\");\n      break;\n  }\n}","map":{"version":3,"sources":["C:/Users/hp/Desktop/Sudoku/my-app/src/visualizeAlgorithm.js"],"names":["backtracking","visualizeBacktracking","simulatedAnnealing","visualizeSimulatedAnnealing","hillClimbing","visualizeAlgorithm","moves","state","selectedAlg","console","log","grid","setTimeout"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,2BAAzB;AACA,OAAOC,qBAAP,MAAkC,uCAAlC;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,OAAOC,2BAAP,MAAwC,0CAAxC;AACA,OAAOC,YAAP,MAAyB,2BAAzB,C,CAEA;AACA;;AAEA,eAAe,SAAUC,kBAAV,GAA+B;AAC1C,MAAIC,KAAK,GAAG,EAAZ;;AACA,UAAO,KAAKC,KAAL,CAAWC,WAAlB;AACE,SAAK,CAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA;;AAEF,SAAK,CAAL;AACEJ,MAAAA,KAAK,GAAGN,YAAY,CAAC,KAAKO,KAAL,CAAWI,IAAZ,CAApB;AACAV,MAAAA,qBAAqB,CAACK,KAAD,CAArB;AACA;;AAEF,SAAK,CAAL;AACEA,MAAAA,KAAK,GAAGF,YAAY,CAAC,KAAKG,KAAL,CAAWI,IAAZ,CAApB;AACAC,MAAAA,UAAU,CAACT,2BAA2B,CAACG,KAAD,CAA5B,EAAoC,IAApC,CAAV;AACA;;AAEF,SAAK,CAAL;AACEA,MAAAA,KAAK,GAAGJ,kBAAkB,CAAC,KAAKK,KAAL,CAAWI,IAAZ,CAA1B;AACAC,MAAAA,UAAU,CAACT,2BAA2B,CAACG,KAAD,CAA5B,EAAoC,IAApC,CAAV;AACA;;AAEF;AACEG,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA;AAtBJ;AAwBH","sourcesContent":["import backtracking from './algorithms/backtracking'\r\nimport visualizeBacktracking from './algorithms/visualizeBacktracking.js'\r\nimport simulatedAnnealing from \"./algorithms/simulatedAnnealing\";\r\nimport visualizeSimulatedAnnealing from \"./algorithms/visualizeSimulatedAnnealing\";\r\nimport hillClimbing from \"./algorithms/hillClimbing\";\r\n\r\n//This function is bound to App.js so that App may\r\n//call any algorithm and visualize it\r\n\r\nexport default function  visualizeAlgorithm() {\r\n    let moves = []\r\n    switch(this.state.selectedAlg) {\r\n      case 0:\r\n        console.log(\"No algorithm selected!\")\r\n        break\r\n\r\n      case 1:\r\n        moves = backtracking(this.state.grid)\r\n        visualizeBacktracking(moves)\r\n        break\r\n\r\n      case 2:\r\n        moves = hillClimbing(this.state.grid)\r\n        setTimeout(visualizeSimulatedAnnealing(moves),1000)\r\n        break\r\n      \r\n      case 3:\r\n        moves = simulatedAnnealing(this.state.grid)\r\n        setTimeout(visualizeSimulatedAnnealing(moves),1000)\r\n        break\r\n      \r\n      default:\r\n        console.log(\"You selected an algorithm!\")\r\n        break\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}