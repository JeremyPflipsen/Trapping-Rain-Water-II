{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Trapping_Water\\\\my-app\\\\src\\\\PathfindingVisualizer\\\\PathfindingVisualizer.jsx\";\nimport React, { Component } from \"react\";\nimport Node from \"./Node/Node\";\nimport \"./PathfindingVisualizer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class PathfindingVisualizer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: []\n    };\n  }\n\n  componentDidMount() {\n    const nodes = [];\n\n    for (let row = 0; row < this.props.grid.length; row++) {\n      const currentRow = [];\n\n      for (let col = 0; col < this.props.grid[0].length; col++) {\n        const currentNode = {\n          col,\n          row,\n          isStart: false,\n          isFinish: false\n        };\n        currentRow.push(currentNode);\n      }\n\n      nodes.push(currentRow);\n    }\n\n    this.setState({\n      grid: nodes\n    });\n    console.log(this.state.grid);\n  }\n\n  render() {\n    const {\n      grid\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: grid.map((row, rowIdx) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: row.map((node, nodeIdx) => {\n              const {\n                col,\n                row,\n                isStart,\n                isFinish\n              } = node;\n              return /*#__PURE__*/_jsxDEV(Node, {\n                col: col,\n                row: row,\n                isStart: isStart,\n                isFinish: isFinish,\n                actualValue: this.props.grid[row][col],\n                inputValueChange: this.props.inputValueChange\n              }, nodeIdx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 21\n              }, this);\n            })\n          }, rowIdx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/hp/Desktop/Trapping_Water/my-app/src/PathfindingVisualizer/PathfindingVisualizer.jsx"],"names":["React","Component","Node","PathfindingVisualizer","constructor","props","state","grid","componentDidMount","nodes","row","length","currentRow","col","currentNode","isStart","isFinish","push","setState","console","log","render","map","rowIdx","node","nodeIdx","inputValueChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAO,6BAAP;;;AAEA,eAAe,MAAMC,qBAAN,SAAoCF,SAApC,CAA8C;AAC3DG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,KAAK,GAAG,EAAd;;AACA,SAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,KAAKL,KAAL,CAAWE,IAAX,CAAgBI,MAAxC,EAAgDD,GAAG,EAAnD,EAAuD;AACrD,YAAME,UAAU,GAAG,EAAnB;;AACA,WAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,KAAKR,KAAL,CAAWE,IAAX,CAAgB,CAAhB,EAAmBI,MAA3C,EAAmDE,GAAG,EAAtD,EAA0D;AACxD,cAAMC,WAAW,GAAG;AAClBD,UAAAA,GADkB;AAElBH,UAAAA,GAFkB;AAGlBK,UAAAA,OAAO,EAAE,KAHS;AAIlBC,UAAAA,QAAQ,EAAE;AAJQ,SAApB;AAMAJ,QAAAA,UAAU,CAACK,IAAX,CAAgBH,WAAhB;AACD;;AACDL,MAAAA,KAAK,CAACQ,IAAN,CAAWL,UAAX;AACD;;AACD,SAAKM,QAAL,CAAc;AACZX,MAAAA,IAAI,EAAEE;AADM,KAAd;AAGAU,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWC,IAAvB;AACD;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACA,wBACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAG,MAAjB;AAAA,kBACGC,IAAI,CAACe,GAAL,CAAS,CAACZ,GAAD,EAAMa,MAAN,KAAiB;AACzB,8BACE;AAAA,sBACGb,GAAG,CAACY,GAAJ,CAAQ,CAACE,IAAD,EAAOC,OAAP,KAAmB;AAC1B,oBAAM;AAAEZ,gBAAAA,GAAF;AAAOH,gBAAAA,GAAP;AAAYK,gBAAAA,OAAZ;AAAqBC,gBAAAA;AAArB,kBAAiCQ,IAAvC;AACA,kCACE,QAAC,IAAD;AAEE,gBAAA,GAAG,EAAIX,GAFT;AAGE,gBAAA,GAAG,EAAIH,GAHT;AAIE,gBAAA,OAAO,EAAIK,OAJb;AAKE,gBAAA,QAAQ,EAAEC,QALZ;AAME,gBAAA,WAAW,EAAE,KAAKX,KAAL,CAAWE,IAAX,CAAgBG,GAAhB,EAAqBG,GAArB,CANf;AAOE,gBAAA,gBAAgB,EAAE,KAAKR,KAAL,CAAWqB;AAP/B,iBACSD,OADT;AAAA;AAAA;AAAA;AAAA,sBADF;AAWD,aAbA;AADH,aAAUF,MAAV;AAAA;AAAA;AAAA;AAAA,kBADF;AAkBD,SAnBA;AADH;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAyBD;;AAxD0D","sourcesContent":["import React, { Component } from \"react\";\r\nimport Node from \"./Node/Node\";\r\n\r\nimport \"./PathfindingVisualizer.css\";\r\n\r\nexport default class PathfindingVisualizer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      grid: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const nodes = [];\r\n    for (let row = 0; row < this.props.grid.length; row++) {\r\n      const currentRow = [];\r\n      for (let col = 0; col < this.props.grid[0].length; col++) {\r\n        const currentNode = {\r\n          col,\r\n          row,\r\n          isStart: false,\r\n          isFinish: false,\r\n        };\r\n        currentRow.push(currentNode);\r\n      }\r\n      nodes.push(currentRow);\r\n    }\r\n    this.setState({\r\n      grid: nodes\r\n    });\r\n    console.log(this.state.grid)\r\n  }\r\n\r\n  render() {\r\n    const { grid } = this.state;\r\n    return (\r\n      <>\r\n        <div className = 'grid'>\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx}>\r\n                {row.map((node, nodeIdx) => {\r\n                  const { col, row, isStart, isFinish} = node;\r\n                  return (\r\n                    <Node \r\n                      key = {nodeIdx}\r\n                      col = {col}\r\n                      row = {row}\r\n                      isStart = {isStart}\r\n                      isFinish={isFinish}\r\n                      actualValue={this.props.grid[row][col]}\r\n                      inputValueChange={this.props.inputValueChange}\r\n                    ></Node>\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </>);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}