{"ast":null,"code":"import initialAlg from \"./algorithms/initialAlg\";\nimport visualizeInitialAlg from \"./algorithms/visualizeInitialAlg\";\nimport visualizeStepBack from \"./algorithms/visualizeStepBack\"; //This function is bound to App.js so that App may\n//call any algorithm and visualize it\n\nexport default function visualizeAlgorithm(changeNodeVal) {\n  function getMode() {\n    return this.state.mode;\n  }\n\n  switch (this.state.selectedAlg) {\n    case 0:\n      console.log(\"No algorithm selected!\");\n      break;\n\n    case 1:\n      if (getMode() === \"play\") {\n        document.getElementById(\"playPause\").innerHTML = \"Pause\";\n        let temp = initialAlg(this.state.grid);\n        visualizeInitialAlg(temp.moves, temp.solvable, getMode);\n        break;\n      } //mode === \"pause\"\n\n\n      document.getElementById(\"playPause\").innerHTML = \"Play\";\n      let temp = initialAlg(this.state.grid, getMode);\n      visualizeStepBack(temp.moves); //we know it's solvable, so we don't need the variable solvable\n\n      break;\n\n    default:\n      console.log(\"You selected an algorithm!\");\n      break;\n  }\n}","map":{"version":3,"sources":["C:/Users/hp/Desktop/Trapping_Water/my-app/src/visualizeAlgorithm.js"],"names":["initialAlg","visualizeInitialAlg","visualizeStepBack","visualizeAlgorithm","changeNodeVal","getMode","state","mode","selectedAlg","console","log","document","getElementById","innerHTML","temp","grid","moves","solvable"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,yBAAvB;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;AACA,OAAOC,iBAAP,MAA8B,gCAA9B,C,CAEA;AACA;;AAEA,eAAe,SAASC,kBAAT,CAA4BC,aAA5B,EAA2C;AACxD,WAASC,OAAT,GAAmB;AACjB,WAAO,KAAKC,KAAL,CAAWC,IAAlB;AACD;;AAED,UAAQ,KAAKD,KAAL,CAAWE,WAAnB;AACE,SAAK,CAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA;;AAEF,SAAK,CAAL;AACE,UAAIL,OAAO,OAAO,MAAlB,EAA0B;AACxBM,QAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,SAArC,GAAiD,OAAjD;AACA,YAAIC,IAAI,GAAGd,UAAU,CAAC,KAAKM,KAAL,CAAWS,IAAZ,CAArB;AACAd,QAAAA,mBAAmB,CAACa,IAAI,CAACE,KAAN,EAAaF,IAAI,CAACG,QAAlB,EAA4BZ,OAA5B,CAAnB;AACA;AACD,OANH,CAOE;;;AACAM,MAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,SAArC,GAAiD,MAAjD;AACA,UAAIC,IAAI,GAAGd,UAAU,CAAC,KAAKM,KAAL,CAAWS,IAAZ,EAAkBV,OAAlB,CAArB;AACAH,MAAAA,iBAAiB,CAACY,IAAI,CAACE,KAAN,CAAjB,CAVF,CAUgC;;AAC9B;;AAEF;AACEP,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA;AApBJ;AAsBD","sourcesContent":["import initialAlg from \"./algorithms/initialAlg\"\r\nimport visualizeInitialAlg from \"./algorithms/visualizeInitialAlg\"\r\nimport visualizeStepBack from \"./algorithms/visualizeStepBack\"\r\n\r\n//This function is bound to App.js so that App may\r\n//call any algorithm and visualize it\r\n\r\nexport default function visualizeAlgorithm(changeNodeVal) {\r\n  function getMode() {\r\n    return this.state.mode\r\n  }\r\n\r\n  switch (this.state.selectedAlg) {\r\n    case 0:\r\n      console.log(\"No algorithm selected!\")\r\n      break\r\n\r\n    case 1:\r\n      if (getMode() === \"play\") {\r\n        document.getElementById(\"playPause\").innerHTML = \"Pause\"\r\n        let temp = initialAlg(this.state.grid)\r\n        visualizeInitialAlg(temp.moves, temp.solvable, getMode)\r\n        break\r\n      }\r\n      //mode === \"pause\"\r\n      document.getElementById(\"playPause\").innerHTML = \"Play\"\r\n      let temp = initialAlg(this.state.grid, getMode)\r\n      visualizeStepBack(temp.moves) //we know it's solvable, so we don't need the variable solvable\r\n      break\r\n\r\n    default:\r\n      console.log(\"You selected an algorithm!\")\r\n      break\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}