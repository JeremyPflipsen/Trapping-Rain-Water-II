{"ast":null,"code":"function Node(row, col) {\n  return document.getElementById(`node-${row}-${col}`);\n} // Gets a node from the screen\n\n\n_c = Node;\nexport default function visualizeInitialAlg(moves) {\n  //make initial border\n  let tempMoves = moves[0].currMoves;\n\n  for (let i = 0; i < tempMoves.length; i++) {\n    Node(tempMoves[i][0], tempMoves[i][1]).className = \"node-finish\";\n  }\n\n  helper(moves.slice(1)); //show rest of moves\n\n  function helper(moves) {\n    setTimeout(() => {\n      if (moves.length < 1) {\n        return;\n      }\n\n      let move;\n      console.log(move);\n\n      if (moves[0].currStep === 3) {\n        for (let i = 0; i < moves[0].currMoves.length; i++) {\n          //remove border node\n          move = moves[0].currMoves[i];\n          Node(move[0], move[1]).className = \"node-visited\";\n        }\n      } else if (moves[0].currStep === 2) {\n        //highlight lowest border node\n        move = moves[0].currMoves[0];\n        Node(move[0], move[1]).className = \"node-start\"; //remove highlight after 1 step\n\n        setTimeout(() => {\n          Node(move[0], move[1]).className = \"node-finish\";\n        }, 1000);\n      } else if (moves[0].currStep === 1) {\n        //add new border node\n        move = moves[0].currMoves[0];\n        Node(move[0], move[1]).className = \"node-finish\";\n      }\n\n      helper(moves.slice(1));\n    }, 500);\n  }\n} //add border tiles\n//remove border tiles\n//highlight lowest border tile\n//highlight nextTile\n//show total, waterLevel\n\nvar _c;\n\n$RefreshReg$(_c, \"Node\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/Trapping_Water/my-app/src/algorithms/visualizeInitialAlg.js"],"names":["Node","row","col","document","getElementById","visualizeInitialAlg","moves","tempMoves","currMoves","i","length","className","helper","slice","setTimeout","move","console","log","currStep"],"mappings":"AAAA,SAASA,IAAT,CAAcC,GAAd,EAAmBC,GAAnB,EAAwB;AACtB,SAAOC,QAAQ,CAACC,cAAT,CAAyB,QAAOH,GAAI,IAAGC,GAAI,EAA3C,CAAP;AACD,C,CAAC;;;KAFOF,I;AAIT,eAAe,SAASK,mBAAT,CAA6BC,KAA7B,EAAoC;AACjD;AACA,MAAIC,SAAS,GAAGD,KAAK,CAAC,CAAD,CAAL,CAASE,SAAzB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,SAAS,CAACG,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzCT,IAAAA,IAAI,CAACO,SAAS,CAACE,CAAD,CAAT,CAAa,CAAb,CAAD,EAAkBF,SAAS,CAACE,CAAD,CAAT,CAAa,CAAb,CAAlB,CAAJ,CAAuCE,SAAvC,GAAmD,aAAnD;AACD;;AAEDC,EAAAA,MAAM,CAACN,KAAK,CAACO,KAAN,CAAY,CAAZ,CAAD,CAAN,CAPiD,CASjD;;AACA,WAASD,MAAT,CAAgBN,KAAhB,EAAuB;AACrBQ,IAAAA,UAAU,CAAC,MAAM;AACf,UAAIR,KAAK,CAACI,MAAN,GAAe,CAAnB,EAAsB;AACpB;AACD;;AACD,UAAIK,IAAJ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,UAAIT,KAAK,CAAC,CAAD,CAAL,CAASY,QAAT,KAAsB,CAA1B,EAA6B;AAC3B,aAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAAC,CAAD,CAAL,CAASE,SAAT,CAAmBE,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AAClD;AACAM,UAAAA,IAAI,GAAGT,KAAK,CAAC,CAAD,CAAL,CAASE,SAAT,CAAmBC,CAAnB,CAAP;AACAT,UAAAA,IAAI,CAACe,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,CAAJ,CAAuBJ,SAAvB,GAAmC,cAAnC;AACD;AACF,OAND,MAMO,IAAIL,KAAK,CAAC,CAAD,CAAL,CAASY,QAAT,KAAsB,CAA1B,EAA6B;AAClC;AACAH,QAAAA,IAAI,GAAGT,KAAK,CAAC,CAAD,CAAL,CAASE,SAAT,CAAmB,CAAnB,CAAP;AACAR,QAAAA,IAAI,CAACe,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,CAAJ,CAAuBJ,SAAvB,GAAmC,YAAnC,CAHkC,CAIlC;;AACAG,QAAAA,UAAU,CAAC,MAAM;AACfd,UAAAA,IAAI,CAACe,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,CAAJ,CAAuBJ,SAAvB,GAAmC,aAAnC;AACD,SAFS,EAEP,IAFO,CAAV;AAGD,OARM,MAQA,IAAIL,KAAK,CAAC,CAAD,CAAL,CAASY,QAAT,KAAsB,CAA1B,EAA6B;AAClC;AACAH,QAAAA,IAAI,GAAGT,KAAK,CAAC,CAAD,CAAL,CAASE,SAAT,CAAmB,CAAnB,CAAP;AACAR,QAAAA,IAAI,CAACe,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,CAAJ,CAAuBJ,SAAvB,GAAmC,aAAnC;AACD;;AAEDC,MAAAA,MAAM,CAACN,KAAK,CAACO,KAAN,CAAY,CAAZ,CAAD,CAAN;AACD,KA3BS,EA2BP,GA3BO,CAAV;AA4BD;AACF,C,CAED;AACA;AACA;AACA;AAEA","sourcesContent":["function Node(row, col) {\r\n  return document.getElementById(`node-${row}-${col}`)\r\n} // Gets a node from the screen\r\n\r\nexport default function visualizeInitialAlg(moves) {\r\n  //make initial border\r\n  let tempMoves = moves[0].currMoves\r\n  for (let i = 0; i < tempMoves.length; i++) {\r\n    Node(tempMoves[i][0], tempMoves[i][1]).className = \"node-finish\"\r\n  }\r\n\r\n  helper(moves.slice(1))\r\n\r\n  //show rest of moves\r\n  function helper(moves) {\r\n    setTimeout(() => {\r\n      if (moves.length < 1) {\r\n        return\r\n      }\r\n      let move\r\n      console.log(move)\r\n      if (moves[0].currStep === 3) {\r\n        for (let i = 0; i < moves[0].currMoves.length; i++) {\r\n          //remove border node\r\n          move = moves[0].currMoves[i]\r\n          Node(move[0], move[1]).className = \"node-visited\"\r\n        }\r\n      } else if (moves[0].currStep === 2) {\r\n        //highlight lowest border node\r\n        move = moves[0].currMoves[0]\r\n        Node(move[0], move[1]).className = \"node-start\"\r\n        //remove highlight after 1 step\r\n        setTimeout(() => {\r\n          Node(move[0], move[1]).className = \"node-finish\"\r\n        }, 1000)\r\n      } else if (moves[0].currStep === 1) {\r\n        //add new border node\r\n        move = moves[0].currMoves[0]\r\n        Node(move[0], move[1]).className = \"node-finish\"\r\n      }\r\n\r\n      helper(moves.slice(1))\r\n    }, 500)\r\n  }\r\n}\r\n\r\n//add border tiles\r\n//remove border tiles\r\n//highlight lowest border tile\r\n//highlight nextTile\r\n\r\n//show total, waterLevel\r\n"]},"metadata":{},"sourceType":"module"}