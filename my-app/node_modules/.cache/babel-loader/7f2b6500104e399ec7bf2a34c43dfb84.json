{"ast":null,"code":"function Node(row, col) {\n  return document.getElementById(`node-${row}-${col}`);\n} // Gets a node from the screen\n\n\nexport default function loadGrid() {\n  // const numbers = [0,0,3,0,2,0,6,0,0,9,0,0,3,0,5,0,0,1,0,0,1,8,0,6,4,0,0,0,0,8,1,0,2,9,0,0,7,0,0,0,0,0,0,0,8,0,0,6,7,0,8,2,0,0,0,0,2,6,0,9,5,0,0,8,0,0,2,0,3,0,0,9,0,0,5,0,1,0,3,0,0]\n  // for (let row = 0; row < 9;row++) {\n  //     for (let col = 0; col < 9; col++) {\n  //         Node(row,col).value = numbers[9*row+col]\n  //     }\n  // }\n  const grid = [[0, 5, 1, 3, 6, 2, 7, 0, 0], [0, 4, 0, 0, 5, 8, 0, 0, 0], [0, 0, 0, 4, 0, 0, 0, 2, 5], [0, 8, 0, 0, 0, 0, 9, 0, 3], [0, 0, 0, 0, 0, 0, 0, 0, 0], [7, 0, 5, 0, 0, 0, 0, 8, 0], [1, 2, 0, 0, 0, 9, 0, 0, 0], [0, 0, 0, 2, 8, 0, 0, 6, 0], [0, 0, 8, 5, 3, 4, 2, 9, 0]];\n\n  for (let row = 0; row < 9; row++) {\n    for (let col = 0; col < 9; col++) {\n      Node(row, col).value = grid[row][col];\n      console.log(\"YES\");\n    }\n  }\n\n  return grid;\n}","map":{"version":3,"sources":["C:/Users/hp/Desktop/Sudoku/my-app/src/loadGrid.js"],"names":["Node","row","col","document","getElementById","loadGrid","grid","value","console","log"],"mappings":"AAEA,SAASA,IAAT,CAAcC,GAAd,EAAmBC,GAAnB,EAAwB;AACpB,SAAOC,QAAQ,CAACC,cAAT,CAAyB,QAAOH,GAAI,IAAGC,GAAI,EAA3C,CAAP;AACD,C,CAAC;;;AAEJ,eAAe,SAASG,QAAT,GAAqB;AAChC;AAEA;AACA;AACA;AACA;AACA;AAEA,QAAMC,IAAI,GAAG,CACT,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CADS,EAET,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAFS,EAGT,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAHS,EAIT,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAJS,EAKT,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CALS,EAMT,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CANS,EAOT,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAPS,EAQT,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CARS,EAST,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CATS,CAAb;;AAYA,OAAK,IAAIL,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,CAAxB,EAA2BA,GAAG,EAA9B,EAAiC;AAC7B,SAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAE,CAAvB,EAA0BA,GAAG,EAA7B,EAAgC;AAC5BF,MAAAA,IAAI,CAACC,GAAD,EAAKC,GAAL,CAAJ,CAAcK,KAAd,GAAsBD,IAAI,CAACL,GAAD,CAAJ,CAAUC,GAAV,CAAtB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH;AACJ;;AAED,SAAOH,IAAP;AACH","sourcesContent":["\r\n\r\nfunction Node(row, col) {\r\n    return document.getElementById(`node-${row}-${col}`)\r\n  } // Gets a node from the screen\r\n\r\nexport default function loadGrid () {\r\n    // const numbers = [0,0,3,0,2,0,6,0,0,9,0,0,3,0,5,0,0,1,0,0,1,8,0,6,4,0,0,0,0,8,1,0,2,9,0,0,7,0,0,0,0,0,0,0,8,0,0,6,7,0,8,2,0,0,0,0,2,6,0,9,5,0,0,8,0,0,2,0,3,0,0,9,0,0,5,0,1,0,3,0,0]\r\n    \r\n    // for (let row = 0; row < 9;row++) {\r\n    //     for (let col = 0; col < 9; col++) {\r\n    //         Node(row,col).value = numbers[9*row+col]\r\n    //     }\r\n    // }\r\n    \r\n    const grid = [\r\n        [0, 5, 1, 3, 6, 2, 7, 0, 0],\r\n        [0, 4, 0, 0, 5, 8, 0, 0, 0],\r\n        [0, 0, 0, 4, 0, 0, 0, 2, 5],\r\n        [0, 8, 0, 0, 0, 0, 9, 0, 3],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [7, 0, 5, 0, 0, 0, 0, 8, 0],\r\n        [1, 2, 0, 0, 0, 9, 0, 0, 0],\r\n        [0, 0, 0, 2, 8, 0, 0, 6, 0],\r\n        [0, 0, 8, 5, 3, 4, 2, 9, 0]\r\n    ]\r\n\r\n    for (let row = 0; row < 9; row++){\r\n        for (let col = 0; col <9; col++){\r\n            Node(row,col).value = grid[row][col]\r\n            console.log(\"YES\")\r\n        }\r\n    }\r\n\r\n    return grid\r\n}"]},"metadata":{},"sourceType":"module"}