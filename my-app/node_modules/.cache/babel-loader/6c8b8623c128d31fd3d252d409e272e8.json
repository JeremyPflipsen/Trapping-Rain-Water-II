{"ast":null,"code":"function Node(row, col) {\n  return document.getElementById(`node-${row}-${col}`);\n} // Gets a node from the screen\n\n\n_c = Node;\nexport default function visualizeInitialAlg(moves) {\n  //make initial border\n  let move = moves[0];\n\n  for (let i = 0; i < moves[0].length; i++) {\n    Node(moves[i][0], moves[i][1]).className = \"node-finish\";\n  }\n\n  helper(moves.slice(1)); //show rest of moves\n\n  function helper(moves) {\n    setTimeout(() => {\n      if (moves.length < 1) {\n        return;\n      }\n\n      move = moves[0];\n      Node(move[0], move[1]).className = \"node-finish\";\n      helper(moves.slice(1));\n    }, 500);\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Node\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/Trapping_Water/my-app/src/algorithms/visualizeInitialAlg.js"],"names":["Node","row","col","document","getElementById","visualizeInitialAlg","moves","move","i","length","className","helper","slice","setTimeout"],"mappings":"AAAA,SAASA,IAAT,CAAcC,GAAd,EAAmBC,GAAnB,EAAwB;AACtB,SAAOC,QAAQ,CAACC,cAAT,CAAyB,QAAOH,GAAI,IAAGC,GAAI,EAA3C,CAAP;AACD,C,CAAC;;;KAFOF,I;AAIT,eAAe,SAASK,mBAAT,CAA6BC,KAA7B,EAAoC;AACjD;AACA,MAAIC,IAAI,GAAGD,KAAK,CAAC,CAAD,CAAhB;;AACA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAAC,CAAD,CAAL,CAASG,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxCR,IAAAA,IAAI,CAACM,KAAK,CAACE,CAAD,CAAL,CAAS,CAAT,CAAD,EAAcF,KAAK,CAACE,CAAD,CAAL,CAAS,CAAT,CAAd,CAAJ,CAA+BE,SAA/B,GAA2C,aAA3C;AACD;;AAEDC,EAAAA,MAAM,CAACL,KAAK,CAACM,KAAN,CAAY,CAAZ,CAAD,CAAN,CAPiD,CASjD;;AACA,WAASD,MAAT,CAAgBL,KAAhB,EAAuB;AACrBO,IAAAA,UAAU,CAAC,MAAM;AACf,UAAIP,KAAK,CAACG,MAAN,GAAe,CAAnB,EAAsB;AACpB;AACD;;AAEDF,MAAAA,IAAI,GAAGD,KAAK,CAAC,CAAD,CAAZ;AAEAN,MAAAA,IAAI,CAACO,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,CAAJ,CAAuBG,SAAvB,GAAmC,aAAnC;AAEAC,MAAAA,MAAM,CAACL,KAAK,CAACM,KAAN,CAAY,CAAZ,CAAD,CAAN;AACD,KAVS,EAUP,GAVO,CAAV;AAWD;AACF","sourcesContent":["function Node(row, col) {\r\n  return document.getElementById(`node-${row}-${col}`)\r\n} // Gets a node from the screen\r\n\r\nexport default function visualizeInitialAlg(moves) {\r\n  //make initial border\r\n  let move = moves[0]\r\n  for (let i = 0; i < moves[0].length; i++) {\r\n    Node(moves[i][0], moves[i][1]).className = \"node-finish\"\r\n  }\r\n\r\n  helper(moves.slice(1))\r\n\r\n  //show rest of moves\r\n  function helper(moves) {\r\n    setTimeout(() => {\r\n      if (moves.length < 1) {\r\n        return\r\n      }\r\n\r\n      move = moves[0]\r\n\r\n      Node(move[0], move[1]).className = \"node-finish\"\r\n\r\n      helper(moves.slice(1))\r\n    }, 500)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}