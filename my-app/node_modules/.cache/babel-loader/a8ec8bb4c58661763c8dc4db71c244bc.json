{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Sudoku\\\\my-app\\\\src\\\\PathfindingVisualizer\\\\PathfindingVisualizer.jsx\";\nimport React, { Component } from \"react\";\nimport Node from \"./Node/Node\";\nimport \"./PathfindingVisualizer.css\";\nexport default class PathfindingVisualizer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodes: []\n    };\n  }\n\n  componentDidMount() {\n    const nodes = [];\n\n    for (let row = 0; row < 9; row++) {\n      const currentRow = [];\n\n      for (let col = 0; col < 9; col++) {\n        const currentNode = {\n          key: {\n            row,\n            col\n          },\n          col,\n          row,\n          isStart: row === 0 && col === 0,\n          isFinish: row === 8 && col === 8\n        };\n        console.log(currentNode.isStart);\n        currentRow.push([currentNode]);\n      }\n\n      nodes.push(currentRow);\n    }\n\n    this.setState({\n      nodes\n    });\n  }\n\n  render() {\n    const {\n      nodes\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, nodes.map((row, rowIdx) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, row.map((node, nodeIdx) => {\n        const {\n          isStart,\n          isFinish\n        } = node;\n        return /*#__PURE__*/React.createElement(Node, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }\n        }, \"key = \", nodeIdx, \"isStart = \", isStart, \"isFinish=\", isFinish);\n      }));\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/hp/Desktop/Sudoku/my-app/src/PathfindingVisualizer/PathfindingVisualizer.jsx"],"names":["React","Component","Node","PathfindingVisualizer","constructor","props","state","nodes","componentDidMount","row","currentRow","col","currentNode","key","isStart","isFinish","console","log","push","setState","render","map","rowIdx","node","nodeIdx"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAO,6BAAP;AAEA,eAAe,MAAMC,qBAAN,SAAoCF,SAApC,CAA8C;AAC3DG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMD,KAAK,GAAG,EAAd;;AACA,SAAK,IAAIE,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,CAAxB,EAA2BA,GAAG,EAA9B,EAAkC;AAChC,YAAMC,UAAU,GAAG,EAAnB;;AACA,WAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,CAAxB,EAA2BA,GAAG,EAA9B,EAAkC;AAChC,cAAMC,WAAW,GAAG;AAClBC,UAAAA,GAAG,EAAE;AAACJ,YAAAA,GAAD;AAAKE,YAAAA;AAAL,WADa;AAElBA,UAAAA,GAFkB;AAGlBF,UAAAA,GAHkB;AAIlBK,UAAAA,OAAO,EAAEL,GAAG,KAAK,CAAR,IAAaE,GAAG,KAAK,CAJZ;AAKlBI,UAAAA,QAAQ,EAAEN,GAAG,KAAK,CAAR,IAAaE,GAAG,KAAK;AALb,SAApB;AAOAK,QAAAA,OAAO,CAACC,GAAR,CAAYL,WAAW,CAACE,OAAxB;AACAJ,QAAAA,UAAU,CAACQ,IAAX,CAAgB,CAACN,WAAD,CAAhB;AACD;;AACDL,MAAAA,KAAK,CAACW,IAAN,CAAWR,UAAX;AACD;;AACD,SAAKS,QAAL,CAAc;AAAEZ,MAAAA;AAAF,KAAd;AACD;;AAEDa,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,KAAK,CAACc,GAAN,CAAU,CAACZ,GAAD,EAAMa,MAAN,KAAiB;AAC1B,0BACE;AAAK,QAAA,GAAG,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGb,GAAG,CAACY,GAAJ,CAAQ,CAACE,IAAD,EAAOC,OAAP,KAAmB;AAC1B,cAAM;AAAEV,UAAAA,OAAF;AAAWC,UAAAA;AAAX,YAAwBQ,IAA9B;AACA,4BACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACSC,OADT,gBAEaV,OAFb,eAGYC,QAHZ,CADF;AAOD,OATA,CADH,CADF;AAcD,KAfA,CADH,CADF;AAoBD;;AAnD0D","sourcesContent":["import React, { Component } from \"react\";\r\nimport Node from \"./Node/Node\";\r\n\r\nimport \"./PathfindingVisualizer.css\";\r\n\r\nexport default class PathfindingVisualizer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nodes: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const nodes = [];\r\n    for (let row = 0; row < 9; row++) {\r\n      const currentRow = [];\r\n      for (let col = 0; col < 9; col++) {\r\n        const currentNode = {\r\n          key: {row,col},\r\n          col,\r\n          row,\r\n          isStart: row === 0 && col === 0,\r\n          isFinish: row === 8 && col === 8,\r\n        };\r\n        console.log(currentNode.isStart)\r\n        currentRow.push([currentNode]);\r\n      }\r\n      nodes.push(currentRow);\r\n    }\r\n    this.setState({ nodes });\r\n  }\r\n\r\n  render() {\r\n    const { nodes } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {nodes.map((row, rowIdx) => {\r\n          return (\r\n            <div key>\r\n              {row.map((node, nodeIdx) => {\r\n                const { isStart, isFinish } = node;\r\n                return (\r\n                  <Node>\r\n                    key = {nodeIdx}\r\n                    isStart = {isStart}\r\n                    isFinish={isFinish}\r\n                  </Node>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}